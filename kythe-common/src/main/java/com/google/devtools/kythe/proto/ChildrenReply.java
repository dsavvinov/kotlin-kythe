// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kythe/proto/explore.proto

package com.google.devtools.kythe.proto;

/**
 * Protobuf type {@code kythe.proto.ChildrenReply}
 */
public  final class ChildrenReply extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:kythe.proto.ChildrenReply)
    ChildrenReplyOrBuilder {
private static final long serialVersionUID = 0L;
  // Use ChildrenReply.newBuilder() to construct.
  private ChildrenReply(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private ChildrenReply() {
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private ChildrenReply(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              inputToChildren_ = com.google.protobuf.MapField.newMapField(
                  InputToChildrenDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000001;
            }
            com.google.protobuf.MapEntry<java.lang.String, com.google.devtools.kythe.proto.Tickets>
            inputToChildren__ = input.readMessage(
                InputToChildrenDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            inputToChildren_.getMutableMap().put(
                inputToChildren__.getKey(), inputToChildren__.getValue());
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              nodeData_ = com.google.protobuf.MapField.newMapField(
                  NodeDataDefaultEntryHolder.defaultEntry);
              mutable_bitField0_ |= 0x00000002;
            }
            com.google.protobuf.MapEntry<java.lang.String, com.google.devtools.kythe.proto.NodeData>
            nodeData__ = input.readMessage(
                NodeDataDefaultEntryHolder.defaultEntry.getParserForType(), extensionRegistry);
            nodeData_.getMutableMap().put(
                nodeData__.getKey(), nodeData__.getValue());
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.kythe.proto.Explore.internal_static_kythe_proto_ChildrenReply_descriptor;
  }

  @SuppressWarnings({"rawtypes"})
  protected com.google.protobuf.MapField internalGetMapField(
      int number) {
    switch (number) {
      case 1:
        return internalGetInputToChildren();
      case 2:
        return internalGetNodeData();
      default:
        throw new RuntimeException(
            "Invalid map field number: " + number);
    }
  }
  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.kythe.proto.Explore.internal_static_kythe_proto_ChildrenReply_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.kythe.proto.ChildrenReply.class, com.google.devtools.kythe.proto.ChildrenReply.Builder.class);
  }

  public static final int INPUT_TO_CHILDREN_FIELD_NUMBER = 1;
  private static final class InputToChildrenDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.google.devtools.kythe.proto.Tickets> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.google.devtools.kythe.proto.Tickets>newDefaultInstance(
                com.google.devtools.kythe.proto.Explore.internal_static_kythe_proto_ChildrenReply_InputToChildrenEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.devtools.kythe.proto.Tickets.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, com.google.devtools.kythe.proto.Tickets> inputToChildren_;
  private com.google.protobuf.MapField<java.lang.String, com.google.devtools.kythe.proto.Tickets>
  internalGetInputToChildren() {
    if (inputToChildren_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          InputToChildrenDefaultEntryHolder.defaultEntry);
    }
    return inputToChildren_;
  }

  public int getInputToChildrenCount() {
    return internalGetInputToChildren().getMap().size();
  }
  /**
   * <pre>
   * associates each input ticket with the set of tickets contained by it
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.Tickets&gt; input_to_children = 1;</code>
   */

  public boolean containsInputToChildren(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetInputToChildren().getMap().containsKey(key);
  }
  /**
   * Use {@link #getInputToChildrenMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.google.devtools.kythe.proto.Tickets> getInputToChildren() {
    return getInputToChildrenMap();
  }
  /**
   * <pre>
   * associates each input ticket with the set of tickets contained by it
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.Tickets&gt; input_to_children = 1;</code>
   */

  public java.util.Map<java.lang.String, com.google.devtools.kythe.proto.Tickets> getInputToChildrenMap() {
    return internalGetInputToChildren().getMap();
  }
  /**
   * <pre>
   * associates each input ticket with the set of tickets contained by it
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.Tickets&gt; input_to_children = 1;</code>
   */

  public com.google.devtools.kythe.proto.Tickets getInputToChildrenOrDefault(
      java.lang.String key,
      com.google.devtools.kythe.proto.Tickets defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, com.google.devtools.kythe.proto.Tickets> map =
        internalGetInputToChildren().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <pre>
   * associates each input ticket with the set of tickets contained by it
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.Tickets&gt; input_to_children = 1;</code>
   */

  public com.google.devtools.kythe.proto.Tickets getInputToChildrenOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, com.google.devtools.kythe.proto.Tickets> map =
        internalGetInputToChildren().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  public static final int NODE_DATA_FIELD_NUMBER = 2;
  private static final class NodeDataDefaultEntryHolder {
    static final com.google.protobuf.MapEntry<
        java.lang.String, com.google.devtools.kythe.proto.NodeData> defaultEntry =
            com.google.protobuf.MapEntry
            .<java.lang.String, com.google.devtools.kythe.proto.NodeData>newDefaultInstance(
                com.google.devtools.kythe.proto.Explore.internal_static_kythe_proto_ChildrenReply_NodeDataEntry_descriptor, 
                com.google.protobuf.WireFormat.FieldType.STRING,
                "",
                com.google.protobuf.WireFormat.FieldType.MESSAGE,
                com.google.devtools.kythe.proto.NodeData.getDefaultInstance());
  }
  private com.google.protobuf.MapField<
      java.lang.String, com.google.devtools.kythe.proto.NodeData> nodeData_;
  private com.google.protobuf.MapField<java.lang.String, com.google.devtools.kythe.proto.NodeData>
  internalGetNodeData() {
    if (nodeData_ == null) {
      return com.google.protobuf.MapField.emptyMapField(
          NodeDataDefaultEntryHolder.defaultEntry);
    }
    return nodeData_;
  }

  public int getNodeDataCount() {
    return internalGetNodeData().getMap().size();
  }
  /**
   * <code>map&lt;string, .kythe.proto.NodeData&gt; node_data = 2;</code>
   */

  public boolean containsNodeData(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    return internalGetNodeData().getMap().containsKey(key);
  }
  /**
   * Use {@link #getNodeDataMap()} instead.
   */
  @java.lang.Deprecated
  public java.util.Map<java.lang.String, com.google.devtools.kythe.proto.NodeData> getNodeData() {
    return getNodeDataMap();
  }
  /**
   * <code>map&lt;string, .kythe.proto.NodeData&gt; node_data = 2;</code>
   */

  public java.util.Map<java.lang.String, com.google.devtools.kythe.proto.NodeData> getNodeDataMap() {
    return internalGetNodeData().getMap();
  }
  /**
   * <code>map&lt;string, .kythe.proto.NodeData&gt; node_data = 2;</code>
   */

  public com.google.devtools.kythe.proto.NodeData getNodeDataOrDefault(
      java.lang.String key,
      com.google.devtools.kythe.proto.NodeData defaultValue) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, com.google.devtools.kythe.proto.NodeData> map =
        internalGetNodeData().getMap();
    return map.containsKey(key) ? map.get(key) : defaultValue;
  }
  /**
   * <code>map&lt;string, .kythe.proto.NodeData&gt; node_data = 2;</code>
   */

  public com.google.devtools.kythe.proto.NodeData getNodeDataOrThrow(
      java.lang.String key) {
    if (key == null) { throw new java.lang.NullPointerException(); }
    java.util.Map<java.lang.String, com.google.devtools.kythe.proto.NodeData> map =
        internalGetNodeData().getMap();
    if (!map.containsKey(key)) {
      throw new java.lang.IllegalArgumentException();
    }
    return map.get(key);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetInputToChildren(),
        InputToChildrenDefaultEntryHolder.defaultEntry,
        1);
    com.google.protobuf.GeneratedMessageV3
      .serializeStringMapTo(
        output,
        internalGetNodeData(),
        NodeDataDefaultEntryHolder.defaultEntry,
        2);
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    for (java.util.Map.Entry<java.lang.String, com.google.devtools.kythe.proto.Tickets> entry
         : internalGetInputToChildren().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.google.devtools.kythe.proto.Tickets>
      inputToChildren__ = InputToChildrenDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(1, inputToChildren__);
    }
    for (java.util.Map.Entry<java.lang.String, com.google.devtools.kythe.proto.NodeData> entry
         : internalGetNodeData().getMap().entrySet()) {
      com.google.protobuf.MapEntry<java.lang.String, com.google.devtools.kythe.proto.NodeData>
      nodeData__ = NodeDataDefaultEntryHolder.defaultEntry.newBuilderForType()
          .setKey(entry.getKey())
          .setValue(entry.getValue())
          .build();
      size += com.google.protobuf.CodedOutputStream
          .computeMessageSize(2, nodeData__);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.kythe.proto.ChildrenReply)) {
      return super.equals(obj);
    }
    com.google.devtools.kythe.proto.ChildrenReply other = (com.google.devtools.kythe.proto.ChildrenReply) obj;

    boolean result = true;
    result = result && internalGetInputToChildren().equals(
        other.internalGetInputToChildren());
    result = result && internalGetNodeData().equals(
        other.internalGetNodeData());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (!internalGetInputToChildren().getMap().isEmpty()) {
      hash = (37 * hash) + INPUT_TO_CHILDREN_FIELD_NUMBER;
      hash = (53 * hash) + internalGetInputToChildren().hashCode();
    }
    if (!internalGetNodeData().getMap().isEmpty()) {
      hash = (37 * hash) + NODE_DATA_FIELD_NUMBER;
      hash = (53 * hash) + internalGetNodeData().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.kythe.proto.ChildrenReply parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.kythe.proto.ChildrenReply parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.ChildrenReply parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.kythe.proto.ChildrenReply parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.ChildrenReply parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.kythe.proto.ChildrenReply parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.ChildrenReply parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.kythe.proto.ChildrenReply parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.ChildrenReply parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.kythe.proto.ChildrenReply parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.ChildrenReply parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.kythe.proto.ChildrenReply parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.kythe.proto.ChildrenReply prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code kythe.proto.ChildrenReply}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:kythe.proto.ChildrenReply)
      com.google.devtools.kythe.proto.ChildrenReplyOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.kythe.proto.Explore.internal_static_kythe_proto_ChildrenReply_descriptor;
    }

    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetInputToChildren();
        case 2:
          return internalGetNodeData();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    @SuppressWarnings({"rawtypes"})
    protected com.google.protobuf.MapField internalGetMutableMapField(
        int number) {
      switch (number) {
        case 1:
          return internalGetMutableInputToChildren();
        case 2:
          return internalGetMutableNodeData();
        default:
          throw new RuntimeException(
              "Invalid map field number: " + number);
      }
    }
    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.kythe.proto.Explore.internal_static_kythe_proto_ChildrenReply_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.kythe.proto.ChildrenReply.class, com.google.devtools.kythe.proto.ChildrenReply.Builder.class);
    }

    // Construct using com.google.devtools.kythe.proto.ChildrenReply.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      internalGetMutableInputToChildren().clear();
      internalGetMutableNodeData().clear();
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.kythe.proto.Explore.internal_static_kythe_proto_ChildrenReply_descriptor;
    }

    public com.google.devtools.kythe.proto.ChildrenReply getDefaultInstanceForType() {
      return com.google.devtools.kythe.proto.ChildrenReply.getDefaultInstance();
    }

    public com.google.devtools.kythe.proto.ChildrenReply build() {
      com.google.devtools.kythe.proto.ChildrenReply result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.devtools.kythe.proto.ChildrenReply buildPartial() {
      com.google.devtools.kythe.proto.ChildrenReply result = new com.google.devtools.kythe.proto.ChildrenReply(this);
      int from_bitField0_ = bitField0_;
      result.inputToChildren_ = internalGetInputToChildren();
      result.inputToChildren_.makeImmutable();
      result.nodeData_ = internalGetNodeData();
      result.nodeData_.makeImmutable();
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.kythe.proto.ChildrenReply) {
        return mergeFrom((com.google.devtools.kythe.proto.ChildrenReply)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.kythe.proto.ChildrenReply other) {
      if (other == com.google.devtools.kythe.proto.ChildrenReply.getDefaultInstance()) return this;
      internalGetMutableInputToChildren().mergeFrom(
          other.internalGetInputToChildren());
      internalGetMutableNodeData().mergeFrom(
          other.internalGetNodeData());
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.devtools.kythe.proto.ChildrenReply parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.devtools.kythe.proto.ChildrenReply) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.MapField<
        java.lang.String, com.google.devtools.kythe.proto.Tickets> inputToChildren_;
    private com.google.protobuf.MapField<java.lang.String, com.google.devtools.kythe.proto.Tickets>
    internalGetInputToChildren() {
      if (inputToChildren_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            InputToChildrenDefaultEntryHolder.defaultEntry);
      }
      return inputToChildren_;
    }
    private com.google.protobuf.MapField<java.lang.String, com.google.devtools.kythe.proto.Tickets>
    internalGetMutableInputToChildren() {
      onChanged();;
      if (inputToChildren_ == null) {
        inputToChildren_ = com.google.protobuf.MapField.newMapField(
            InputToChildrenDefaultEntryHolder.defaultEntry);
      }
      if (!inputToChildren_.isMutable()) {
        inputToChildren_ = inputToChildren_.copy();
      }
      return inputToChildren_;
    }

    public int getInputToChildrenCount() {
      return internalGetInputToChildren().getMap().size();
    }
    /**
     * <pre>
     * associates each input ticket with the set of tickets contained by it
     * </pre>
     *
     * <code>map&lt;string, .kythe.proto.Tickets&gt; input_to_children = 1;</code>
     */

    public boolean containsInputToChildren(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetInputToChildren().getMap().containsKey(key);
    }
    /**
     * Use {@link #getInputToChildrenMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.devtools.kythe.proto.Tickets> getInputToChildren() {
      return getInputToChildrenMap();
    }
    /**
     * <pre>
     * associates each input ticket with the set of tickets contained by it
     * </pre>
     *
     * <code>map&lt;string, .kythe.proto.Tickets&gt; input_to_children = 1;</code>
     */

    public java.util.Map<java.lang.String, com.google.devtools.kythe.proto.Tickets> getInputToChildrenMap() {
      return internalGetInputToChildren().getMap();
    }
    /**
     * <pre>
     * associates each input ticket with the set of tickets contained by it
     * </pre>
     *
     * <code>map&lt;string, .kythe.proto.Tickets&gt; input_to_children = 1;</code>
     */

    public com.google.devtools.kythe.proto.Tickets getInputToChildrenOrDefault(
        java.lang.String key,
        com.google.devtools.kythe.proto.Tickets defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.devtools.kythe.proto.Tickets> map =
          internalGetInputToChildren().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <pre>
     * associates each input ticket with the set of tickets contained by it
     * </pre>
     *
     * <code>map&lt;string, .kythe.proto.Tickets&gt; input_to_children = 1;</code>
     */

    public com.google.devtools.kythe.proto.Tickets getInputToChildrenOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.devtools.kythe.proto.Tickets> map =
          internalGetInputToChildren().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearInputToChildren() {
      internalGetMutableInputToChildren().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <pre>
     * associates each input ticket with the set of tickets contained by it
     * </pre>
     *
     * <code>map&lt;string, .kythe.proto.Tickets&gt; input_to_children = 1;</code>
     */

    public Builder removeInputToChildren(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableInputToChildren().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.devtools.kythe.proto.Tickets>
    getMutableInputToChildren() {
      return internalGetMutableInputToChildren().getMutableMap();
    }
    /**
     * <pre>
     * associates each input ticket with the set of tickets contained by it
     * </pre>
     *
     * <code>map&lt;string, .kythe.proto.Tickets&gt; input_to_children = 1;</code>
     */
    public Builder putInputToChildren(
        java.lang.String key,
        com.google.devtools.kythe.proto.Tickets value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableInputToChildren().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <pre>
     * associates each input ticket with the set of tickets contained by it
     * </pre>
     *
     * <code>map&lt;string, .kythe.proto.Tickets&gt; input_to_children = 1;</code>
     */

    public Builder putAllInputToChildren(
        java.util.Map<java.lang.String, com.google.devtools.kythe.proto.Tickets> values) {
      internalGetMutableInputToChildren().getMutableMap()
          .putAll(values);
      return this;
    }

    private com.google.protobuf.MapField<
        java.lang.String, com.google.devtools.kythe.proto.NodeData> nodeData_;
    private com.google.protobuf.MapField<java.lang.String, com.google.devtools.kythe.proto.NodeData>
    internalGetNodeData() {
      if (nodeData_ == null) {
        return com.google.protobuf.MapField.emptyMapField(
            NodeDataDefaultEntryHolder.defaultEntry);
      }
      return nodeData_;
    }
    private com.google.protobuf.MapField<java.lang.String, com.google.devtools.kythe.proto.NodeData>
    internalGetMutableNodeData() {
      onChanged();;
      if (nodeData_ == null) {
        nodeData_ = com.google.protobuf.MapField.newMapField(
            NodeDataDefaultEntryHolder.defaultEntry);
      }
      if (!nodeData_.isMutable()) {
        nodeData_ = nodeData_.copy();
      }
      return nodeData_;
    }

    public int getNodeDataCount() {
      return internalGetNodeData().getMap().size();
    }
    /**
     * <code>map&lt;string, .kythe.proto.NodeData&gt; node_data = 2;</code>
     */

    public boolean containsNodeData(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      return internalGetNodeData().getMap().containsKey(key);
    }
    /**
     * Use {@link #getNodeDataMap()} instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.devtools.kythe.proto.NodeData> getNodeData() {
      return getNodeDataMap();
    }
    /**
     * <code>map&lt;string, .kythe.proto.NodeData&gt; node_data = 2;</code>
     */

    public java.util.Map<java.lang.String, com.google.devtools.kythe.proto.NodeData> getNodeDataMap() {
      return internalGetNodeData().getMap();
    }
    /**
     * <code>map&lt;string, .kythe.proto.NodeData&gt; node_data = 2;</code>
     */

    public com.google.devtools.kythe.proto.NodeData getNodeDataOrDefault(
        java.lang.String key,
        com.google.devtools.kythe.proto.NodeData defaultValue) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.devtools.kythe.proto.NodeData> map =
          internalGetNodeData().getMap();
      return map.containsKey(key) ? map.get(key) : defaultValue;
    }
    /**
     * <code>map&lt;string, .kythe.proto.NodeData&gt; node_data = 2;</code>
     */

    public com.google.devtools.kythe.proto.NodeData getNodeDataOrThrow(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      java.util.Map<java.lang.String, com.google.devtools.kythe.proto.NodeData> map =
          internalGetNodeData().getMap();
      if (!map.containsKey(key)) {
        throw new java.lang.IllegalArgumentException();
      }
      return map.get(key);
    }

    public Builder clearNodeData() {
      internalGetMutableNodeData().getMutableMap()
          .clear();
      return this;
    }
    /**
     * <code>map&lt;string, .kythe.proto.NodeData&gt; node_data = 2;</code>
     */

    public Builder removeNodeData(
        java.lang.String key) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableNodeData().getMutableMap()
          .remove(key);
      return this;
    }
    /**
     * Use alternate mutation accessors instead.
     */
    @java.lang.Deprecated
    public java.util.Map<java.lang.String, com.google.devtools.kythe.proto.NodeData>
    getMutableNodeData() {
      return internalGetMutableNodeData().getMutableMap();
    }
    /**
     * <code>map&lt;string, .kythe.proto.NodeData&gt; node_data = 2;</code>
     */
    public Builder putNodeData(
        java.lang.String key,
        com.google.devtools.kythe.proto.NodeData value) {
      if (key == null) { throw new java.lang.NullPointerException(); }
      if (value == null) { throw new java.lang.NullPointerException(); }
      internalGetMutableNodeData().getMutableMap()
          .put(key, value);
      return this;
    }
    /**
     * <code>map&lt;string, .kythe.proto.NodeData&gt; node_data = 2;</code>
     */

    public Builder putAllNodeData(
        java.util.Map<java.lang.String, com.google.devtools.kythe.proto.NodeData> values) {
      internalGetMutableNodeData().getMutableMap()
          .putAll(values);
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:kythe.proto.ChildrenReply)
  }

  // @@protoc_insertion_point(class_scope:kythe.proto.ChildrenReply)
  private static final com.google.devtools.kythe.proto.ChildrenReply DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.kythe.proto.ChildrenReply();
  }

  public static com.google.devtools.kythe.proto.ChildrenReply getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<ChildrenReply>
      PARSER = new com.google.protobuf.AbstractParser<ChildrenReply>() {
    public ChildrenReply parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new ChildrenReply(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<ChildrenReply> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<ChildrenReply> getParserForType() {
    return PARSER;
  }

  public com.google.devtools.kythe.proto.ChildrenReply getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

