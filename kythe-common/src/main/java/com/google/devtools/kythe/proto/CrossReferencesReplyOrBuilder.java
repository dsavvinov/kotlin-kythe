// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kythe/proto/xref.proto

package com.google.devtools.kythe.proto;

public interface CrossReferencesReplyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:kythe.proto.CrossReferencesReply)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Total number of cross-references on all pages matching requested filters.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesReply.Total total = 5;</code>
   */
  boolean hasTotal();
  /**
   * <pre>
   * Total number of cross-references on all pages matching requested filters.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesReply.Total total = 5;</code>
   */
  com.google.devtools.kythe.proto.CrossReferencesReply.Total getTotal();
  /**
   * <pre>
   * Total number of cross-references on all pages matching requested filters.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesReply.Total total = 5;</code>
   */
  com.google.devtools.kythe.proto.CrossReferencesReply.TotalOrBuilder getTotalOrBuilder();

  /**
   * <pre>
   * Sets of cross-references for each requested node
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.CrossReferencesReply.CrossReferenceSet&gt; cross_references = 1;</code>
   */
  int getCrossReferencesCount();
  /**
   * <pre>
   * Sets of cross-references for each requested node
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.CrossReferencesReply.CrossReferenceSet&gt; cross_references = 1;</code>
   */
  boolean containsCrossReferences(
      java.lang.String key);
  /**
   * Use {@link #getCrossReferencesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.devtools.kythe.proto.CrossReferencesReply.CrossReferenceSet>
  getCrossReferences();
  /**
   * <pre>
   * Sets of cross-references for each requested node
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.CrossReferencesReply.CrossReferenceSet&gt; cross_references = 1;</code>
   */
  java.util.Map<java.lang.String, com.google.devtools.kythe.proto.CrossReferencesReply.CrossReferenceSet>
  getCrossReferencesMap();
  /**
   * <pre>
   * Sets of cross-references for each requested node
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.CrossReferencesReply.CrossReferenceSet&gt; cross_references = 1;</code>
   */

  com.google.devtools.kythe.proto.CrossReferencesReply.CrossReferenceSet getCrossReferencesOrDefault(
      java.lang.String key,
      com.google.devtools.kythe.proto.CrossReferencesReply.CrossReferenceSet defaultValue);
  /**
   * <pre>
   * Sets of cross-references for each requested node
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.CrossReferencesReply.CrossReferenceSet&gt; cross_references = 1;</code>
   */

  com.google.devtools.kythe.proto.CrossReferencesReply.CrossReferenceSet getCrossReferencesOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * The facts left from the requested filters of the related node facts
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.common.NodeInfo&gt; nodes = 2;</code>
   */
  int getNodesCount();
  /**
   * <pre>
   * The facts left from the requested filters of the related node facts
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.common.NodeInfo&gt; nodes = 2;</code>
   */
  boolean containsNodes(
      java.lang.String key);
  /**
   * Use {@link #getNodesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.devtools.kythe.proto.NodeInfo>
  getNodes();
  /**
   * <pre>
   * The facts left from the requested filters of the related node facts
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.common.NodeInfo&gt; nodes = 2;</code>
   */
  java.util.Map<java.lang.String, com.google.devtools.kythe.proto.NodeInfo>
  getNodesMap();
  /**
   * <pre>
   * The facts left from the requested filters of the related node facts
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.common.NodeInfo&gt; nodes = 2;</code>
   */

  com.google.devtools.kythe.proto.NodeInfo getNodesOrDefault(
      java.lang.String key,
      com.google.devtools.kythe.proto.NodeInfo defaultValue);
  /**
   * <pre>
   * The facts left from the requested filters of the related node facts
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.common.NodeInfo&gt; nodes = 2;</code>
   */

  com.google.devtools.kythe.proto.NodeInfo getNodesOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Map from the definition tickets referred to in each NodeInfo to their
   * Anchor.  This map will only be returned if the
   * CrossReferencesRequest.node_definitions switch is true.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.Anchor&gt; definition_locations = 3;</code>
   */
  int getDefinitionLocationsCount();
  /**
   * <pre>
   * Map from the definition tickets referred to in each NodeInfo to their
   * Anchor.  This map will only be returned if the
   * CrossReferencesRequest.node_definitions switch is true.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.Anchor&gt; definition_locations = 3;</code>
   */
  boolean containsDefinitionLocations(
      java.lang.String key);
  /**
   * Use {@link #getDefinitionLocationsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.devtools.kythe.proto.Anchor>
  getDefinitionLocations();
  /**
   * <pre>
   * Map from the definition tickets referred to in each NodeInfo to their
   * Anchor.  This map will only be returned if the
   * CrossReferencesRequest.node_definitions switch is true.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.Anchor&gt; definition_locations = 3;</code>
   */
  java.util.Map<java.lang.String, com.google.devtools.kythe.proto.Anchor>
  getDefinitionLocationsMap();
  /**
   * <pre>
   * Map from the definition tickets referred to in each NodeInfo to their
   * Anchor.  This map will only be returned if the
   * CrossReferencesRequest.node_definitions switch is true.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.Anchor&gt; definition_locations = 3;</code>
   */

  com.google.devtools.kythe.proto.Anchor getDefinitionLocationsOrDefault(
      java.lang.String key,
      com.google.devtools.kythe.proto.Anchor defaultValue);
  /**
   * <pre>
   * Map from the definition tickets referred to in each NodeInfo to their
   * Anchor.  This map will only be returned if the
   * CrossReferencesRequest.node_definitions switch is true.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.Anchor&gt; definition_locations = 3;</code>
   */

  com.google.devtools.kythe.proto.Anchor getDefinitionLocationsOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * If there are additional pages of cross-references after the ones returned
   * in this reply, next_page_token is the page token that may be passed to
   * fetch the next page in sequence after this one.  If there are no additional
   * cross-references, this field will be empty.
   * </pre>
   *
   * <code>string next_page_token = 10;</code>
   */
  java.lang.String getNextPageToken();
  /**
   * <pre>
   * If there are additional pages of cross-references after the ones returned
   * in this reply, next_page_token is the page token that may be passed to
   * fetch the next page in sequence after this one.  If there are no additional
   * cross-references, this field will be empty.
   * </pre>
   *
   * <code>string next_page_token = 10;</code>
   */
  com.google.protobuf.ByteString
      getNextPageTokenBytes();
}
