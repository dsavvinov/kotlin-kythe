// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kythe/proto/xref.proto

package com.google.devtools.kythe.proto;

/**
 * Protobuf type {@code kythe.proto.CrossReferencesRequest}
 */
public  final class CrossReferencesRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:kythe.proto.CrossReferencesRequest)
    CrossReferencesRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use CrossReferencesRequest.newBuilder() to construct.
  private CrossReferencesRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private CrossReferencesRequest() {
    ticket_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    definitionKind_ = 0;
    declarationKind_ = 0;
    referenceKind_ = 0;
    callerKind_ = 0;
    filter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    relatedNodeKind_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    anchorText_ = false;
    nodeDefinitions_ = false;
    pageSize_ = 0;
    pageToken_ = "";
    snippets_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private CrossReferencesRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              ticket_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            ticket_.add(s);
            break;
          }
          case 16: {
            int rawValue = input.readEnum();

            definitionKind_ = rawValue;
            break;
          }
          case 24: {
            int rawValue = input.readEnum();

            referenceKind_ = rawValue;
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
              filter_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000020;
            }
            filter_.add(s);
            break;
          }
          case 48: {

            anchorText_ = input.readBool();
            break;
          }
          case 56: {
            int rawValue = input.readEnum();

            declarationKind_ = rawValue;
            break;
          }
          case 64: {

            nodeDefinitions_ = input.readBool();
            break;
          }
          case 80: {

            pageSize_ = input.readInt32();
            break;
          }
          case 90: {
            java.lang.String s = input.readStringRequireUtf8();

            pageToken_ = s;
            break;
          }
          case 96: {
            int rawValue = input.readEnum();

            callerKind_ = rawValue;
            break;
          }
          case 104: {
            int rawValue = input.readEnum();

            snippets_ = rawValue;
            break;
          }
          case 114: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              relatedNodeKind_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000040;
            }
            relatedNodeKind_.add(s);
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        ticket_ = ticket_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000020) == 0x00000020)) {
        filter_ = filter_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
        relatedNodeKind_ = relatedNodeKind_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.kythe.proto.Xref.internal_static_kythe_proto_CrossReferencesRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.kythe.proto.Xref.internal_static_kythe_proto_CrossReferencesRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.kythe.proto.CrossReferencesRequest.class, com.google.devtools.kythe.proto.CrossReferencesRequest.Builder.class);
  }

  /**
   * Protobuf enum {@code kythe.proto.CrossReferencesRequest.DefinitionKind}
   */
  public enum DefinitionKind
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * No definitions will be populated in the CrossReferencesReply.
     * </pre>
     *
     * <code>NO_DEFINITIONS = 0;</code>
     */
    NO_DEFINITIONS(0),
    /**
     * <pre>
     * All known definition anchors reached by the "/kythe/edge/defines" edge
     * kind (or its variants) will be populated in the CrossReferencesReply.
     * </pre>
     *
     * <code>ALL_DEFINITIONS = 1;</code>
     */
    ALL_DEFINITIONS(1),
    /**
     * <pre>
     * Only definition anchors reached by the "/kythe/edge/defines" edge kind
     * will be populated in the CrossReferencesReply.
     * </pre>
     *
     * <code>FULL_DEFINITIONS = 2;</code>
     */
    FULL_DEFINITIONS(2),
    /**
     * <pre>
     * Only definition anchors reached by the "/kythe/edge/defines/binding" edge
     * kind will be populated in the CrossReferencesReply.
     * </pre>
     *
     * <code>BINDING_DEFINITIONS = 3;</code>
     */
    BINDING_DEFINITIONS(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * No definitions will be populated in the CrossReferencesReply.
     * </pre>
     *
     * <code>NO_DEFINITIONS = 0;</code>
     */
    public static final int NO_DEFINITIONS_VALUE = 0;
    /**
     * <pre>
     * All known definition anchors reached by the "/kythe/edge/defines" edge
     * kind (or its variants) will be populated in the CrossReferencesReply.
     * </pre>
     *
     * <code>ALL_DEFINITIONS = 1;</code>
     */
    public static final int ALL_DEFINITIONS_VALUE = 1;
    /**
     * <pre>
     * Only definition anchors reached by the "/kythe/edge/defines" edge kind
     * will be populated in the CrossReferencesReply.
     * </pre>
     *
     * <code>FULL_DEFINITIONS = 2;</code>
     */
    public static final int FULL_DEFINITIONS_VALUE = 2;
    /**
     * <pre>
     * Only definition anchors reached by the "/kythe/edge/defines/binding" edge
     * kind will be populated in the CrossReferencesReply.
     * </pre>
     *
     * <code>BINDING_DEFINITIONS = 3;</code>
     */
    public static final int BINDING_DEFINITIONS_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DefinitionKind valueOf(int value) {
      return forNumber(value);
    }

    public static DefinitionKind forNumber(int value) {
      switch (value) {
        case 0: return NO_DEFINITIONS;
        case 1: return ALL_DEFINITIONS;
        case 2: return FULL_DEFINITIONS;
        case 3: return BINDING_DEFINITIONS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DefinitionKind>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DefinitionKind> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DefinitionKind>() {
            public DefinitionKind findValueByNumber(int number) {
              return DefinitionKind.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.devtools.kythe.proto.CrossReferencesRequest.getDescriptor().getEnumTypes().get(0);
    }

    private static final DefinitionKind[] VALUES = values();

    public static DefinitionKind valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DefinitionKind(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:kythe.proto.CrossReferencesRequest.DefinitionKind)
  }

  /**
   * Protobuf enum {@code kythe.proto.CrossReferencesRequest.DeclarationKind}
   */
  public enum DeclarationKind
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * No declarations will be populated in the CrossDeclarationsReply.
     * </pre>
     *
     * <code>NO_DECLARATIONS = 0;</code>
     */
    NO_DECLARATIONS(0),
    /**
     * <pre>
     * When the source node is incomplete, all known declaration anchors reached
     * by the "/kythe/edge/defines" edge kind (or its variants) will be
     * populated in the CrossDeclarationsReply.
     * </pre>
     *
     * <code>ALL_DECLARATIONS = 1;</code>
     */
    ALL_DECLARATIONS(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * No declarations will be populated in the CrossDeclarationsReply.
     * </pre>
     *
     * <code>NO_DECLARATIONS = 0;</code>
     */
    public static final int NO_DECLARATIONS_VALUE = 0;
    /**
     * <pre>
     * When the source node is incomplete, all known declaration anchors reached
     * by the "/kythe/edge/defines" edge kind (or its variants) will be
     * populated in the CrossDeclarationsReply.
     * </pre>
     *
     * <code>ALL_DECLARATIONS = 1;</code>
     */
    public static final int ALL_DECLARATIONS_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static DeclarationKind valueOf(int value) {
      return forNumber(value);
    }

    public static DeclarationKind forNumber(int value) {
      switch (value) {
        case 0: return NO_DECLARATIONS;
        case 1: return ALL_DECLARATIONS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<DeclarationKind>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        DeclarationKind> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<DeclarationKind>() {
            public DeclarationKind findValueByNumber(int number) {
              return DeclarationKind.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.devtools.kythe.proto.CrossReferencesRequest.getDescriptor().getEnumTypes().get(1);
    }

    private static final DeclarationKind[] VALUES = values();

    public static DeclarationKind valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private DeclarationKind(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:kythe.proto.CrossReferencesRequest.DeclarationKind)
  }

  /**
   * Protobuf enum {@code kythe.proto.CrossReferencesRequest.ReferenceKind}
   */
  public enum ReferenceKind
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * No references will be populated in the CrossReferencesReply.
     * </pre>
     *
     * <code>NO_REFERENCES = 0;</code>
     */
    NO_REFERENCES(0),
    /**
     * <pre>
     * Only callgraph-related references as described in
     * http://www.kythe.io/docs/schema/callgraph.html
     * </pre>
     *
     * <code>CALL_REFERENCES = 1;</code>
     */
    CALL_REFERENCES(1),
    /**
     * <pre>
     * All references except those that are related to the callgraph.
     * </pre>
     *
     * <code>NON_CALL_REFERENCES = 2;</code>
     */
    NON_CALL_REFERENCES(2),
    /**
     * <pre>
     * All known reference anchors reached by the "/kythe/edge/ref" edge kind
     * (or its variants) will be populated in the CrossReferencesReply.
     * </pre>
     *
     * <code>ALL_REFERENCES = 3;</code>
     */
    ALL_REFERENCES(3),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * No references will be populated in the CrossReferencesReply.
     * </pre>
     *
     * <code>NO_REFERENCES = 0;</code>
     */
    public static final int NO_REFERENCES_VALUE = 0;
    /**
     * <pre>
     * Only callgraph-related references as described in
     * http://www.kythe.io/docs/schema/callgraph.html
     * </pre>
     *
     * <code>CALL_REFERENCES = 1;</code>
     */
    public static final int CALL_REFERENCES_VALUE = 1;
    /**
     * <pre>
     * All references except those that are related to the callgraph.
     * </pre>
     *
     * <code>NON_CALL_REFERENCES = 2;</code>
     */
    public static final int NON_CALL_REFERENCES_VALUE = 2;
    /**
     * <pre>
     * All known reference anchors reached by the "/kythe/edge/ref" edge kind
     * (or its variants) will be populated in the CrossReferencesReply.
     * </pre>
     *
     * <code>ALL_REFERENCES = 3;</code>
     */
    public static final int ALL_REFERENCES_VALUE = 3;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static ReferenceKind valueOf(int value) {
      return forNumber(value);
    }

    public static ReferenceKind forNumber(int value) {
      switch (value) {
        case 0: return NO_REFERENCES;
        case 1: return CALL_REFERENCES;
        case 2: return NON_CALL_REFERENCES;
        case 3: return ALL_REFERENCES;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<ReferenceKind>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        ReferenceKind> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<ReferenceKind>() {
            public ReferenceKind findValueByNumber(int number) {
              return ReferenceKind.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.devtools.kythe.proto.CrossReferencesRequest.getDescriptor().getEnumTypes().get(2);
    }

    private static final ReferenceKind[] VALUES = values();

    public static ReferenceKind valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private ReferenceKind(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:kythe.proto.CrossReferencesRequest.ReferenceKind)
  }

  /**
   * Protobuf enum {@code kythe.proto.CrossReferencesRequest.CallerKind}
   */
  public enum CallerKind
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * No callgraph information will be populated in the CrossReferencesReply.
     * </pre>
     *
     * <code>NO_CALLERS = 0;</code>
     */
    NO_CALLERS(0),
    /**
     * <pre>
     * Callgraph information will be populated in the CrossReferencesReply.
     * </pre>
     *
     * <code>DIRECT_CALLERS = 1;</code>
     */
    DIRECT_CALLERS(1),
    /**
     * <pre>
     * Callgraph information will be populated in the CrossReferencesReply.
     * Calls to override-related functions will also be considered.
     * </pre>
     *
     * <code>OVERRIDE_CALLERS = 2;</code>
     */
    OVERRIDE_CALLERS(2),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * No callgraph information will be populated in the CrossReferencesReply.
     * </pre>
     *
     * <code>NO_CALLERS = 0;</code>
     */
    public static final int NO_CALLERS_VALUE = 0;
    /**
     * <pre>
     * Callgraph information will be populated in the CrossReferencesReply.
     * </pre>
     *
     * <code>DIRECT_CALLERS = 1;</code>
     */
    public static final int DIRECT_CALLERS_VALUE = 1;
    /**
     * <pre>
     * Callgraph information will be populated in the CrossReferencesReply.
     * Calls to override-related functions will also be considered.
     * </pre>
     *
     * <code>OVERRIDE_CALLERS = 2;</code>
     */
    public static final int OVERRIDE_CALLERS_VALUE = 2;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static CallerKind valueOf(int value) {
      return forNumber(value);
    }

    public static CallerKind forNumber(int value) {
      switch (value) {
        case 0: return NO_CALLERS;
        case 1: return DIRECT_CALLERS;
        case 2: return OVERRIDE_CALLERS;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<CallerKind>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        CallerKind> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<CallerKind>() {
            public CallerKind findValueByNumber(int number) {
              return CallerKind.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.devtools.kythe.proto.CrossReferencesRequest.getDescriptor().getEnumTypes().get(3);
    }

    private static final CallerKind[] VALUES = values();

    public static CallerKind valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private CallerKind(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:kythe.proto.CrossReferencesRequest.CallerKind)
  }

  private int bitField0_;
  public static final int TICKET_FIELD_NUMBER = 1;
  private com.google.protobuf.LazyStringList ticket_;
  /**
   * <pre>
   * Set of nodes for which to return their cross-references.  Must be
   * non-empty.
   * </pre>
   *
   * <code>repeated string ticket = 1;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getTicketList() {
    return ticket_;
  }
  /**
   * <pre>
   * Set of nodes for which to return their cross-references.  Must be
   * non-empty.
   * </pre>
   *
   * <code>repeated string ticket = 1;</code>
   */
  public int getTicketCount() {
    return ticket_.size();
  }
  /**
   * <pre>
   * Set of nodes for which to return their cross-references.  Must be
   * non-empty.
   * </pre>
   *
   * <code>repeated string ticket = 1;</code>
   */
  public java.lang.String getTicket(int index) {
    return ticket_.get(index);
  }
  /**
   * <pre>
   * Set of nodes for which to return their cross-references.  Must be
   * non-empty.
   * </pre>
   *
   * <code>repeated string ticket = 1;</code>
   */
  public com.google.protobuf.ByteString
      getTicketBytes(int index) {
    return ticket_.getByteString(index);
  }

  public static final int DEFINITION_KIND_FIELD_NUMBER = 2;
  private int definitionKind_;
  /**
   * <pre>
   * Determines what kind of definition anchors, if any, should be returned in
   * the response.  See the documentation for each DefinitionKind for more
   * information.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesRequest.DefinitionKind definition_kind = 2;</code>
   */
  public int getDefinitionKindValue() {
    return definitionKind_;
  }
  /**
   * <pre>
   * Determines what kind of definition anchors, if any, should be returned in
   * the response.  See the documentation for each DefinitionKind for more
   * information.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesRequest.DefinitionKind definition_kind = 2;</code>
   */
  public com.google.devtools.kythe.proto.CrossReferencesRequest.DefinitionKind getDefinitionKind() {
    com.google.devtools.kythe.proto.CrossReferencesRequest.DefinitionKind result = com.google.devtools.kythe.proto.CrossReferencesRequest.DefinitionKind.valueOf(definitionKind_);
    return result == null ? com.google.devtools.kythe.proto.CrossReferencesRequest.DefinitionKind.UNRECOGNIZED : result;
  }

  public static final int DECLARATION_KIND_FIELD_NUMBER = 7;
  private int declarationKind_;
  /**
   * <pre>
   * Determines what kind of declaration anchors, if any, should be returned in
   * the response.  See the documentation for each DeclarationKind for more
   * information.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesRequest.DeclarationKind declaration_kind = 7;</code>
   */
  public int getDeclarationKindValue() {
    return declarationKind_;
  }
  /**
   * <pre>
   * Determines what kind of declaration anchors, if any, should be returned in
   * the response.  See the documentation for each DeclarationKind for more
   * information.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesRequest.DeclarationKind declaration_kind = 7;</code>
   */
  public com.google.devtools.kythe.proto.CrossReferencesRequest.DeclarationKind getDeclarationKind() {
    com.google.devtools.kythe.proto.CrossReferencesRequest.DeclarationKind result = com.google.devtools.kythe.proto.CrossReferencesRequest.DeclarationKind.valueOf(declarationKind_);
    return result == null ? com.google.devtools.kythe.proto.CrossReferencesRequest.DeclarationKind.UNRECOGNIZED : result;
  }

  public static final int REFERENCE_KIND_FIELD_NUMBER = 3;
  private int referenceKind_;
  /**
   * <pre>
   * Determines what kind of reference anchors, if any, should be returned in
   * the response.  See the documentation for each ReferenceKind for more
   * information.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesRequest.ReferenceKind reference_kind = 3;</code>
   */
  public int getReferenceKindValue() {
    return referenceKind_;
  }
  /**
   * <pre>
   * Determines what kind of reference anchors, if any, should be returned in
   * the response.  See the documentation for each ReferenceKind for more
   * information.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesRequest.ReferenceKind reference_kind = 3;</code>
   */
  public com.google.devtools.kythe.proto.CrossReferencesRequest.ReferenceKind getReferenceKind() {
    com.google.devtools.kythe.proto.CrossReferencesRequest.ReferenceKind result = com.google.devtools.kythe.proto.CrossReferencesRequest.ReferenceKind.valueOf(referenceKind_);
    return result == null ? com.google.devtools.kythe.proto.CrossReferencesRequest.ReferenceKind.UNRECOGNIZED : result;
  }

  public static final int CALLER_KIND_FIELD_NUMBER = 12;
  private int callerKind_;
  /**
   * <pre>
   * Determines what kind of callgraph information, if any, should be returned
   * in the response.  See the documentation for each CallerKind for more
   * information.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesRequest.CallerKind caller_kind = 12;</code>
   */
  public int getCallerKindValue() {
    return callerKind_;
  }
  /**
   * <pre>
   * Determines what kind of callgraph information, if any, should be returned
   * in the response.  See the documentation for each CallerKind for more
   * information.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesRequest.CallerKind caller_kind = 12;</code>
   */
  public com.google.devtools.kythe.proto.CrossReferencesRequest.CallerKind getCallerKind() {
    com.google.devtools.kythe.proto.CrossReferencesRequest.CallerKind result = com.google.devtools.kythe.proto.CrossReferencesRequest.CallerKind.valueOf(callerKind_);
    return result == null ? com.google.devtools.kythe.proto.CrossReferencesRequest.CallerKind.UNRECOGNIZED : result;
  }

  public static final int FILTER_FIELD_NUMBER = 5;
  private com.google.protobuf.LazyStringList filter_;
  /**
   * <pre>
   * Collection of filter globs that determines which facts will be returned for
   * the related nodes of each requested node.  If filter is empty or unset, no
   * node facts or related nodes are returned.  See EdgesRequest (graph.proto)
   * for the format of the filter globs.
   * </pre>
   *
   * <code>repeated string filter = 5;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getFilterList() {
    return filter_;
  }
  /**
   * <pre>
   * Collection of filter globs that determines which facts will be returned for
   * the related nodes of each requested node.  If filter is empty or unset, no
   * node facts or related nodes are returned.  See EdgesRequest (graph.proto)
   * for the format of the filter globs.
   * </pre>
   *
   * <code>repeated string filter = 5;</code>
   */
  public int getFilterCount() {
    return filter_.size();
  }
  /**
   * <pre>
   * Collection of filter globs that determines which facts will be returned for
   * the related nodes of each requested node.  If filter is empty or unset, no
   * node facts or related nodes are returned.  See EdgesRequest (graph.proto)
   * for the format of the filter globs.
   * </pre>
   *
   * <code>repeated string filter = 5;</code>
   */
  public java.lang.String getFilter(int index) {
    return filter_.get(index);
  }
  /**
   * <pre>
   * Collection of filter globs that determines which facts will be returned for
   * the related nodes of each requested node.  If filter is empty or unset, no
   * node facts or related nodes are returned.  See EdgesRequest (graph.proto)
   * for the format of the filter globs.
   * </pre>
   *
   * <code>repeated string filter = 5;</code>
   */
  public com.google.protobuf.ByteString
      getFilterBytes(int index) {
    return filter_.getByteString(index);
  }

  public static final int RELATED_NODE_KIND_FIELD_NUMBER = 14;
  private com.google.protobuf.LazyStringList relatedNodeKind_;
  /**
   * <pre>
   * Determines which relation kinds for RelatedNodes should be returned in the
   * response.  If empty, all known RelatedNodes will be returned that match the
   * above filter.  Otherwise, only RelatedNodes with one of these requested
   * relation kinds, and matching the above filter, will be returned in the
   * response.
   * Importantly, this is not a list of node kinds; this is a list of edge kinds
   * (i.e. values for RelatedNode.relation_kind field).
   * </pre>
   *
   * <code>repeated string related_node_kind = 14;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getRelatedNodeKindList() {
    return relatedNodeKind_;
  }
  /**
   * <pre>
   * Determines which relation kinds for RelatedNodes should be returned in the
   * response.  If empty, all known RelatedNodes will be returned that match the
   * above filter.  Otherwise, only RelatedNodes with one of these requested
   * relation kinds, and matching the above filter, will be returned in the
   * response.
   * Importantly, this is not a list of node kinds; this is a list of edge kinds
   * (i.e. values for RelatedNode.relation_kind field).
   * </pre>
   *
   * <code>repeated string related_node_kind = 14;</code>
   */
  public int getRelatedNodeKindCount() {
    return relatedNodeKind_.size();
  }
  /**
   * <pre>
   * Determines which relation kinds for RelatedNodes should be returned in the
   * response.  If empty, all known RelatedNodes will be returned that match the
   * above filter.  Otherwise, only RelatedNodes with one of these requested
   * relation kinds, and matching the above filter, will be returned in the
   * response.
   * Importantly, this is not a list of node kinds; this is a list of edge kinds
   * (i.e. values for RelatedNode.relation_kind field).
   * </pre>
   *
   * <code>repeated string related_node_kind = 14;</code>
   */
  public java.lang.String getRelatedNodeKind(int index) {
    return relatedNodeKind_.get(index);
  }
  /**
   * <pre>
   * Determines which relation kinds for RelatedNodes should be returned in the
   * response.  If empty, all known RelatedNodes will be returned that match the
   * above filter.  Otherwise, only RelatedNodes with one of these requested
   * relation kinds, and matching the above filter, will be returned in the
   * response.
   * Importantly, this is not a list of node kinds; this is a list of edge kinds
   * (i.e. values for RelatedNode.relation_kind field).
   * </pre>
   *
   * <code>repeated string related_node_kind = 14;</code>
   */
  public com.google.protobuf.ByteString
      getRelatedNodeKindBytes(int index) {
    return relatedNodeKind_.getByteString(index);
  }

  public static final int ANCHOR_TEXT_FIELD_NUMBER = 6;
  private boolean anchorText_;
  /**
   * <pre>
   * Determines whether each Anchor in the response should have its text field
   * populated.
   * </pre>
   *
   * <code>bool anchor_text = 6;</code>
   */
  public boolean getAnchorText() {
    return anchorText_;
  }

  public static final int NODE_DEFINITIONS_FIELD_NUMBER = 8;
  private boolean nodeDefinitions_;
  /**
   * <pre>
   * Determines whether each NodeInfo matching the above filters will have its
   * definition location populated, if known.
   * </pre>
   *
   * <code>bool node_definitions = 8;</code>
   */
  public boolean getNodeDefinitions() {
    return nodeDefinitions_;
  }

  public static final int PAGE_SIZE_FIELD_NUMBER = 10;
  private int pageSize_;
  /**
   * <pre>
   * The cross-references matching a request are organized into logical pages.
   * The size of each page is a number of distinct cross-references
   * (definitions, references, documentation, and related nodes).
   * If page_token is empty, cross-references will be returned starting at the
   * beginning of the sequence; otherwise the starting point named by the
   * page_token will be used.  Legal values of page_token are returned by the
   * server in the next_page_token field of the CrossReferencesReply.  A page
   * token should be treated as an opaque value by the client, and is valid only
   * relative to a particular CrossReferencesRequest.  If an invalid page token
   * is requested, the server will return an error.
   * If page_size &gt; 0, at most that number of cross-references will be returned
   * by the service for this request (see ReferenceSet and CrossReferencesReply
   * below).  If page_size = 0, the default, the server will assume a reasonable
   * default page size.  The server will return an error if page_size &lt; 0.
   * The server is allowed to return fewer cross-references than the requested
   * page_size, even if more are available, save that it must return at least 1
   * edge if any are available at all.
   * </pre>
   *
   * <code>int32 page_size = 10;</code>
   */
  public int getPageSize() {
    return pageSize_;
  }

  public static final int PAGE_TOKEN_FIELD_NUMBER = 11;
  private volatile java.lang.Object pageToken_;
  /**
   * <code>string page_token = 11;</code>
   */
  public java.lang.String getPageToken() {
    java.lang.Object ref = pageToken_;
    if (ref instanceof java.lang.String) {
      return (java.lang.String) ref;
    } else {
      com.google.protobuf.ByteString bs = 
          (com.google.protobuf.ByteString) ref;
      java.lang.String s = bs.toStringUtf8();
      pageToken_ = s;
      return s;
    }
  }
  /**
   * <code>string page_token = 11;</code>
   */
  public com.google.protobuf.ByteString
      getPageTokenBytes() {
    java.lang.Object ref = pageToken_;
    if (ref instanceof java.lang.String) {
      com.google.protobuf.ByteString b = 
          com.google.protobuf.ByteString.copyFromUtf8(
              (java.lang.String) ref);
      pageToken_ = b;
      return b;
    } else {
      return (com.google.protobuf.ByteString) ref;
    }
  }

  public static final int SNIPPETS_FIELD_NUMBER = 13;
  private int snippets_;
  /**
   * <pre>
   * What kind of snippets to return (or none).
   * </pre>
   *
   * <code>.kythe.proto.SnippetsKind snippets = 13;</code>
   */
  public int getSnippetsValue() {
    return snippets_;
  }
  /**
   * <pre>
   * What kind of snippets to return (or none).
   * </pre>
   *
   * <code>.kythe.proto.SnippetsKind snippets = 13;</code>
   */
  public com.google.devtools.kythe.proto.SnippetsKind getSnippets() {
    com.google.devtools.kythe.proto.SnippetsKind result = com.google.devtools.kythe.proto.SnippetsKind.valueOf(snippets_);
    return result == null ? com.google.devtools.kythe.proto.SnippetsKind.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < ticket_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, ticket_.getRaw(i));
    }
    if (definitionKind_ != com.google.devtools.kythe.proto.CrossReferencesRequest.DefinitionKind.NO_DEFINITIONS.getNumber()) {
      output.writeEnum(2, definitionKind_);
    }
    if (referenceKind_ != com.google.devtools.kythe.proto.CrossReferencesRequest.ReferenceKind.NO_REFERENCES.getNumber()) {
      output.writeEnum(3, referenceKind_);
    }
    for (int i = 0; i < filter_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, filter_.getRaw(i));
    }
    if (anchorText_ != false) {
      output.writeBool(6, anchorText_);
    }
    if (declarationKind_ != com.google.devtools.kythe.proto.CrossReferencesRequest.DeclarationKind.NO_DECLARATIONS.getNumber()) {
      output.writeEnum(7, declarationKind_);
    }
    if (nodeDefinitions_ != false) {
      output.writeBool(8, nodeDefinitions_);
    }
    if (pageSize_ != 0) {
      output.writeInt32(10, pageSize_);
    }
    if (!getPageTokenBytes().isEmpty()) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 11, pageToken_);
    }
    if (callerKind_ != com.google.devtools.kythe.proto.CrossReferencesRequest.CallerKind.NO_CALLERS.getNumber()) {
      output.writeEnum(12, callerKind_);
    }
    if (snippets_ != com.google.devtools.kythe.proto.SnippetsKind.NONE.getNumber()) {
      output.writeEnum(13, snippets_);
    }
    for (int i = 0; i < relatedNodeKind_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 14, relatedNodeKind_.getRaw(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < ticket_.size(); i++) {
        dataSize += computeStringSizeNoTag(ticket_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getTicketList().size();
    }
    if (definitionKind_ != com.google.devtools.kythe.proto.CrossReferencesRequest.DefinitionKind.NO_DEFINITIONS.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(2, definitionKind_);
    }
    if (referenceKind_ != com.google.devtools.kythe.proto.CrossReferencesRequest.ReferenceKind.NO_REFERENCES.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(3, referenceKind_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < filter_.size(); i++) {
        dataSize += computeStringSizeNoTag(filter_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getFilterList().size();
    }
    if (anchorText_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, anchorText_);
    }
    if (declarationKind_ != com.google.devtools.kythe.proto.CrossReferencesRequest.DeclarationKind.NO_DECLARATIONS.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(7, declarationKind_);
    }
    if (nodeDefinitions_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, nodeDefinitions_);
    }
    if (pageSize_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(10, pageSize_);
    }
    if (!getPageTokenBytes().isEmpty()) {
      size += com.google.protobuf.GeneratedMessageV3.computeStringSize(11, pageToken_);
    }
    if (callerKind_ != com.google.devtools.kythe.proto.CrossReferencesRequest.CallerKind.NO_CALLERS.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(12, callerKind_);
    }
    if (snippets_ != com.google.devtools.kythe.proto.SnippetsKind.NONE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(13, snippets_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < relatedNodeKind_.size(); i++) {
        dataSize += computeStringSizeNoTag(relatedNodeKind_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getRelatedNodeKindList().size();
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.kythe.proto.CrossReferencesRequest)) {
      return super.equals(obj);
    }
    com.google.devtools.kythe.proto.CrossReferencesRequest other = (com.google.devtools.kythe.proto.CrossReferencesRequest) obj;

    boolean result = true;
    result = result && getTicketList()
        .equals(other.getTicketList());
    result = result && definitionKind_ == other.definitionKind_;
    result = result && declarationKind_ == other.declarationKind_;
    result = result && referenceKind_ == other.referenceKind_;
    result = result && callerKind_ == other.callerKind_;
    result = result && getFilterList()
        .equals(other.getFilterList());
    result = result && getRelatedNodeKindList()
        .equals(other.getRelatedNodeKindList());
    result = result && (getAnchorText()
        == other.getAnchorText());
    result = result && (getNodeDefinitions()
        == other.getNodeDefinitions());
    result = result && (getPageSize()
        == other.getPageSize());
    result = result && getPageToken()
        .equals(other.getPageToken());
    result = result && snippets_ == other.snippets_;
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getTicketCount() > 0) {
      hash = (37 * hash) + TICKET_FIELD_NUMBER;
      hash = (53 * hash) + getTicketList().hashCode();
    }
    hash = (37 * hash) + DEFINITION_KIND_FIELD_NUMBER;
    hash = (53 * hash) + definitionKind_;
    hash = (37 * hash) + DECLARATION_KIND_FIELD_NUMBER;
    hash = (53 * hash) + declarationKind_;
    hash = (37 * hash) + REFERENCE_KIND_FIELD_NUMBER;
    hash = (53 * hash) + referenceKind_;
    hash = (37 * hash) + CALLER_KIND_FIELD_NUMBER;
    hash = (53 * hash) + callerKind_;
    if (getFilterCount() > 0) {
      hash = (37 * hash) + FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFilterList().hashCode();
    }
    if (getRelatedNodeKindCount() > 0) {
      hash = (37 * hash) + RELATED_NODE_KIND_FIELD_NUMBER;
      hash = (53 * hash) + getRelatedNodeKindList().hashCode();
    }
    hash = (37 * hash) + ANCHOR_TEXT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getAnchorText());
    hash = (37 * hash) + NODE_DEFINITIONS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getNodeDefinitions());
    hash = (37 * hash) + PAGE_SIZE_FIELD_NUMBER;
    hash = (53 * hash) + getPageSize();
    hash = (37 * hash) + PAGE_TOKEN_FIELD_NUMBER;
    hash = (53 * hash) + getPageToken().hashCode();
    hash = (37 * hash) + SNIPPETS_FIELD_NUMBER;
    hash = (53 * hash) + snippets_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.kythe.proto.CrossReferencesRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.kythe.proto.CrossReferencesRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.CrossReferencesRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.kythe.proto.CrossReferencesRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.CrossReferencesRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.kythe.proto.CrossReferencesRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.CrossReferencesRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.kythe.proto.CrossReferencesRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.CrossReferencesRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.kythe.proto.CrossReferencesRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.CrossReferencesRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.kythe.proto.CrossReferencesRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.kythe.proto.CrossReferencesRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code kythe.proto.CrossReferencesRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:kythe.proto.CrossReferencesRequest)
      com.google.devtools.kythe.proto.CrossReferencesRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.kythe.proto.Xref.internal_static_kythe_proto_CrossReferencesRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.kythe.proto.Xref.internal_static_kythe_proto_CrossReferencesRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.kythe.proto.CrossReferencesRequest.class, com.google.devtools.kythe.proto.CrossReferencesRequest.Builder.class);
    }

    // Construct using com.google.devtools.kythe.proto.CrossReferencesRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      ticket_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      definitionKind_ = 0;

      declarationKind_ = 0;

      referenceKind_ = 0;

      callerKind_ = 0;

      filter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000020);
      relatedNodeKind_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000040);
      anchorText_ = false;

      nodeDefinitions_ = false;

      pageSize_ = 0;

      pageToken_ = "";

      snippets_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.kythe.proto.Xref.internal_static_kythe_proto_CrossReferencesRequest_descriptor;
    }

    public com.google.devtools.kythe.proto.CrossReferencesRequest getDefaultInstanceForType() {
      return com.google.devtools.kythe.proto.CrossReferencesRequest.getDefaultInstance();
    }

    public com.google.devtools.kythe.proto.CrossReferencesRequest build() {
      com.google.devtools.kythe.proto.CrossReferencesRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.devtools.kythe.proto.CrossReferencesRequest buildPartial() {
      com.google.devtools.kythe.proto.CrossReferencesRequest result = new com.google.devtools.kythe.proto.CrossReferencesRequest(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        ticket_ = ticket_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.ticket_ = ticket_;
      result.definitionKind_ = definitionKind_;
      result.declarationKind_ = declarationKind_;
      result.referenceKind_ = referenceKind_;
      result.callerKind_ = callerKind_;
      if (((bitField0_ & 0x00000020) == 0x00000020)) {
        filter_ = filter_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000020);
      }
      result.filter_ = filter_;
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        relatedNodeKind_ = relatedNodeKind_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000040);
      }
      result.relatedNodeKind_ = relatedNodeKind_;
      result.anchorText_ = anchorText_;
      result.nodeDefinitions_ = nodeDefinitions_;
      result.pageSize_ = pageSize_;
      result.pageToken_ = pageToken_;
      result.snippets_ = snippets_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.kythe.proto.CrossReferencesRequest) {
        return mergeFrom((com.google.devtools.kythe.proto.CrossReferencesRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.kythe.proto.CrossReferencesRequest other) {
      if (other == com.google.devtools.kythe.proto.CrossReferencesRequest.getDefaultInstance()) return this;
      if (!other.ticket_.isEmpty()) {
        if (ticket_.isEmpty()) {
          ticket_ = other.ticket_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureTicketIsMutable();
          ticket_.addAll(other.ticket_);
        }
        onChanged();
      }
      if (other.definitionKind_ != 0) {
        setDefinitionKindValue(other.getDefinitionKindValue());
      }
      if (other.declarationKind_ != 0) {
        setDeclarationKindValue(other.getDeclarationKindValue());
      }
      if (other.referenceKind_ != 0) {
        setReferenceKindValue(other.getReferenceKindValue());
      }
      if (other.callerKind_ != 0) {
        setCallerKindValue(other.getCallerKindValue());
      }
      if (!other.filter_.isEmpty()) {
        if (filter_.isEmpty()) {
          filter_ = other.filter_;
          bitField0_ = (bitField0_ & ~0x00000020);
        } else {
          ensureFilterIsMutable();
          filter_.addAll(other.filter_);
        }
        onChanged();
      }
      if (!other.relatedNodeKind_.isEmpty()) {
        if (relatedNodeKind_.isEmpty()) {
          relatedNodeKind_ = other.relatedNodeKind_;
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          ensureRelatedNodeKindIsMutable();
          relatedNodeKind_.addAll(other.relatedNodeKind_);
        }
        onChanged();
      }
      if (other.getAnchorText() != false) {
        setAnchorText(other.getAnchorText());
      }
      if (other.getNodeDefinitions() != false) {
        setNodeDefinitions(other.getNodeDefinitions());
      }
      if (other.getPageSize() != 0) {
        setPageSize(other.getPageSize());
      }
      if (!other.getPageToken().isEmpty()) {
        pageToken_ = other.pageToken_;
        onChanged();
      }
      if (other.snippets_ != 0) {
        setSnippetsValue(other.getSnippetsValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.devtools.kythe.proto.CrossReferencesRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.devtools.kythe.proto.CrossReferencesRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.LazyStringList ticket_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureTicketIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        ticket_ = new com.google.protobuf.LazyStringArrayList(ticket_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * Set of nodes for which to return their cross-references.  Must be
     * non-empty.
     * </pre>
     *
     * <code>repeated string ticket = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getTicketList() {
      return ticket_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Set of nodes for which to return their cross-references.  Must be
     * non-empty.
     * </pre>
     *
     * <code>repeated string ticket = 1;</code>
     */
    public int getTicketCount() {
      return ticket_.size();
    }
    /**
     * <pre>
     * Set of nodes for which to return their cross-references.  Must be
     * non-empty.
     * </pre>
     *
     * <code>repeated string ticket = 1;</code>
     */
    public java.lang.String getTicket(int index) {
      return ticket_.get(index);
    }
    /**
     * <pre>
     * Set of nodes for which to return their cross-references.  Must be
     * non-empty.
     * </pre>
     *
     * <code>repeated string ticket = 1;</code>
     */
    public com.google.protobuf.ByteString
        getTicketBytes(int index) {
      return ticket_.getByteString(index);
    }
    /**
     * <pre>
     * Set of nodes for which to return their cross-references.  Must be
     * non-empty.
     * </pre>
     *
     * <code>repeated string ticket = 1;</code>
     */
    public Builder setTicket(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureTicketIsMutable();
      ticket_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Set of nodes for which to return their cross-references.  Must be
     * non-empty.
     * </pre>
     *
     * <code>repeated string ticket = 1;</code>
     */
    public Builder addTicket(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureTicketIsMutable();
      ticket_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Set of nodes for which to return their cross-references.  Must be
     * non-empty.
     * </pre>
     *
     * <code>repeated string ticket = 1;</code>
     */
    public Builder addAllTicket(
        java.lang.Iterable<java.lang.String> values) {
      ensureTicketIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, ticket_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Set of nodes for which to return their cross-references.  Must be
     * non-empty.
     * </pre>
     *
     * <code>repeated string ticket = 1;</code>
     */
    public Builder clearTicket() {
      ticket_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Set of nodes for which to return their cross-references.  Must be
     * non-empty.
     * </pre>
     *
     * <code>repeated string ticket = 1;</code>
     */
    public Builder addTicketBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureTicketIsMutable();
      ticket_.add(value);
      onChanged();
      return this;
    }

    private int definitionKind_ = 0;
    /**
     * <pre>
     * Determines what kind of definition anchors, if any, should be returned in
     * the response.  See the documentation for each DefinitionKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.DefinitionKind definition_kind = 2;</code>
     */
    public int getDefinitionKindValue() {
      return definitionKind_;
    }
    /**
     * <pre>
     * Determines what kind of definition anchors, if any, should be returned in
     * the response.  See the documentation for each DefinitionKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.DefinitionKind definition_kind = 2;</code>
     */
    public Builder setDefinitionKindValue(int value) {
      definitionKind_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines what kind of definition anchors, if any, should be returned in
     * the response.  See the documentation for each DefinitionKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.DefinitionKind definition_kind = 2;</code>
     */
    public com.google.devtools.kythe.proto.CrossReferencesRequest.DefinitionKind getDefinitionKind() {
      com.google.devtools.kythe.proto.CrossReferencesRequest.DefinitionKind result = com.google.devtools.kythe.proto.CrossReferencesRequest.DefinitionKind.valueOf(definitionKind_);
      return result == null ? com.google.devtools.kythe.proto.CrossReferencesRequest.DefinitionKind.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Determines what kind of definition anchors, if any, should be returned in
     * the response.  See the documentation for each DefinitionKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.DefinitionKind definition_kind = 2;</code>
     */
    public Builder setDefinitionKind(com.google.devtools.kythe.proto.CrossReferencesRequest.DefinitionKind value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      definitionKind_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines what kind of definition anchors, if any, should be returned in
     * the response.  See the documentation for each DefinitionKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.DefinitionKind definition_kind = 2;</code>
     */
    public Builder clearDefinitionKind() {
      
      definitionKind_ = 0;
      onChanged();
      return this;
    }

    private int declarationKind_ = 0;
    /**
     * <pre>
     * Determines what kind of declaration anchors, if any, should be returned in
     * the response.  See the documentation for each DeclarationKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.DeclarationKind declaration_kind = 7;</code>
     */
    public int getDeclarationKindValue() {
      return declarationKind_;
    }
    /**
     * <pre>
     * Determines what kind of declaration anchors, if any, should be returned in
     * the response.  See the documentation for each DeclarationKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.DeclarationKind declaration_kind = 7;</code>
     */
    public Builder setDeclarationKindValue(int value) {
      declarationKind_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines what kind of declaration anchors, if any, should be returned in
     * the response.  See the documentation for each DeclarationKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.DeclarationKind declaration_kind = 7;</code>
     */
    public com.google.devtools.kythe.proto.CrossReferencesRequest.DeclarationKind getDeclarationKind() {
      com.google.devtools.kythe.proto.CrossReferencesRequest.DeclarationKind result = com.google.devtools.kythe.proto.CrossReferencesRequest.DeclarationKind.valueOf(declarationKind_);
      return result == null ? com.google.devtools.kythe.proto.CrossReferencesRequest.DeclarationKind.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Determines what kind of declaration anchors, if any, should be returned in
     * the response.  See the documentation for each DeclarationKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.DeclarationKind declaration_kind = 7;</code>
     */
    public Builder setDeclarationKind(com.google.devtools.kythe.proto.CrossReferencesRequest.DeclarationKind value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      declarationKind_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines what kind of declaration anchors, if any, should be returned in
     * the response.  See the documentation for each DeclarationKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.DeclarationKind declaration_kind = 7;</code>
     */
    public Builder clearDeclarationKind() {
      
      declarationKind_ = 0;
      onChanged();
      return this;
    }

    private int referenceKind_ = 0;
    /**
     * <pre>
     * Determines what kind of reference anchors, if any, should be returned in
     * the response.  See the documentation for each ReferenceKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.ReferenceKind reference_kind = 3;</code>
     */
    public int getReferenceKindValue() {
      return referenceKind_;
    }
    /**
     * <pre>
     * Determines what kind of reference anchors, if any, should be returned in
     * the response.  See the documentation for each ReferenceKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.ReferenceKind reference_kind = 3;</code>
     */
    public Builder setReferenceKindValue(int value) {
      referenceKind_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines what kind of reference anchors, if any, should be returned in
     * the response.  See the documentation for each ReferenceKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.ReferenceKind reference_kind = 3;</code>
     */
    public com.google.devtools.kythe.proto.CrossReferencesRequest.ReferenceKind getReferenceKind() {
      com.google.devtools.kythe.proto.CrossReferencesRequest.ReferenceKind result = com.google.devtools.kythe.proto.CrossReferencesRequest.ReferenceKind.valueOf(referenceKind_);
      return result == null ? com.google.devtools.kythe.proto.CrossReferencesRequest.ReferenceKind.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Determines what kind of reference anchors, if any, should be returned in
     * the response.  See the documentation for each ReferenceKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.ReferenceKind reference_kind = 3;</code>
     */
    public Builder setReferenceKind(com.google.devtools.kythe.proto.CrossReferencesRequest.ReferenceKind value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      referenceKind_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines what kind of reference anchors, if any, should be returned in
     * the response.  See the documentation for each ReferenceKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.ReferenceKind reference_kind = 3;</code>
     */
    public Builder clearReferenceKind() {
      
      referenceKind_ = 0;
      onChanged();
      return this;
    }

    private int callerKind_ = 0;
    /**
     * <pre>
     * Determines what kind of callgraph information, if any, should be returned
     * in the response.  See the documentation for each CallerKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.CallerKind caller_kind = 12;</code>
     */
    public int getCallerKindValue() {
      return callerKind_;
    }
    /**
     * <pre>
     * Determines what kind of callgraph information, if any, should be returned
     * in the response.  See the documentation for each CallerKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.CallerKind caller_kind = 12;</code>
     */
    public Builder setCallerKindValue(int value) {
      callerKind_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines what kind of callgraph information, if any, should be returned
     * in the response.  See the documentation for each CallerKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.CallerKind caller_kind = 12;</code>
     */
    public com.google.devtools.kythe.proto.CrossReferencesRequest.CallerKind getCallerKind() {
      com.google.devtools.kythe.proto.CrossReferencesRequest.CallerKind result = com.google.devtools.kythe.proto.CrossReferencesRequest.CallerKind.valueOf(callerKind_);
      return result == null ? com.google.devtools.kythe.proto.CrossReferencesRequest.CallerKind.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * Determines what kind of callgraph information, if any, should be returned
     * in the response.  See the documentation for each CallerKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.CallerKind caller_kind = 12;</code>
     */
    public Builder setCallerKind(com.google.devtools.kythe.proto.CrossReferencesRequest.CallerKind value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      callerKind_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines what kind of callgraph information, if any, should be returned
     * in the response.  See the documentation for each CallerKind for more
     * information.
     * </pre>
     *
     * <code>.kythe.proto.CrossReferencesRequest.CallerKind caller_kind = 12;</code>
     */
    public Builder clearCallerKind() {
      
      callerKind_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList filter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureFilterIsMutable() {
      if (!((bitField0_ & 0x00000020) == 0x00000020)) {
        filter_ = new com.google.protobuf.LazyStringArrayList(filter_);
        bitField0_ |= 0x00000020;
       }
    }
    /**
     * <pre>
     * Collection of filter globs that determines which facts will be returned for
     * the related nodes of each requested node.  If filter is empty or unset, no
     * node facts or related nodes are returned.  See EdgesRequest (graph.proto)
     * for the format of the filter globs.
     * </pre>
     *
     * <code>repeated string filter = 5;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getFilterList() {
      return filter_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Collection of filter globs that determines which facts will be returned for
     * the related nodes of each requested node.  If filter is empty or unset, no
     * node facts or related nodes are returned.  See EdgesRequest (graph.proto)
     * for the format of the filter globs.
     * </pre>
     *
     * <code>repeated string filter = 5;</code>
     */
    public int getFilterCount() {
      return filter_.size();
    }
    /**
     * <pre>
     * Collection of filter globs that determines which facts will be returned for
     * the related nodes of each requested node.  If filter is empty or unset, no
     * node facts or related nodes are returned.  See EdgesRequest (graph.proto)
     * for the format of the filter globs.
     * </pre>
     *
     * <code>repeated string filter = 5;</code>
     */
    public java.lang.String getFilter(int index) {
      return filter_.get(index);
    }
    /**
     * <pre>
     * Collection of filter globs that determines which facts will be returned for
     * the related nodes of each requested node.  If filter is empty or unset, no
     * node facts or related nodes are returned.  See EdgesRequest (graph.proto)
     * for the format of the filter globs.
     * </pre>
     *
     * <code>repeated string filter = 5;</code>
     */
    public com.google.protobuf.ByteString
        getFilterBytes(int index) {
      return filter_.getByteString(index);
    }
    /**
     * <pre>
     * Collection of filter globs that determines which facts will be returned for
     * the related nodes of each requested node.  If filter is empty or unset, no
     * node facts or related nodes are returned.  See EdgesRequest (graph.proto)
     * for the format of the filter globs.
     * </pre>
     *
     * <code>repeated string filter = 5;</code>
     */
    public Builder setFilter(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureFilterIsMutable();
      filter_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Collection of filter globs that determines which facts will be returned for
     * the related nodes of each requested node.  If filter is empty or unset, no
     * node facts or related nodes are returned.  See EdgesRequest (graph.proto)
     * for the format of the filter globs.
     * </pre>
     *
     * <code>repeated string filter = 5;</code>
     */
    public Builder addFilter(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureFilterIsMutable();
      filter_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Collection of filter globs that determines which facts will be returned for
     * the related nodes of each requested node.  If filter is empty or unset, no
     * node facts or related nodes are returned.  See EdgesRequest (graph.proto)
     * for the format of the filter globs.
     * </pre>
     *
     * <code>repeated string filter = 5;</code>
     */
    public Builder addAllFilter(
        java.lang.Iterable<java.lang.String> values) {
      ensureFilterIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, filter_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Collection of filter globs that determines which facts will be returned for
     * the related nodes of each requested node.  If filter is empty or unset, no
     * node facts or related nodes are returned.  See EdgesRequest (graph.proto)
     * for the format of the filter globs.
     * </pre>
     *
     * <code>repeated string filter = 5;</code>
     */
    public Builder clearFilter() {
      filter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000020);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Collection of filter globs that determines which facts will be returned for
     * the related nodes of each requested node.  If filter is empty or unset, no
     * node facts or related nodes are returned.  See EdgesRequest (graph.proto)
     * for the format of the filter globs.
     * </pre>
     *
     * <code>repeated string filter = 5;</code>
     */
    public Builder addFilterBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureFilterIsMutable();
      filter_.add(value);
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList relatedNodeKind_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureRelatedNodeKindIsMutable() {
      if (!((bitField0_ & 0x00000040) == 0x00000040)) {
        relatedNodeKind_ = new com.google.protobuf.LazyStringArrayList(relatedNodeKind_);
        bitField0_ |= 0x00000040;
       }
    }
    /**
     * <pre>
     * Determines which relation kinds for RelatedNodes should be returned in the
     * response.  If empty, all known RelatedNodes will be returned that match the
     * above filter.  Otherwise, only RelatedNodes with one of these requested
     * relation kinds, and matching the above filter, will be returned in the
     * response.
     * Importantly, this is not a list of node kinds; this is a list of edge kinds
     * (i.e. values for RelatedNode.relation_kind field).
     * </pre>
     *
     * <code>repeated string related_node_kind = 14;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getRelatedNodeKindList() {
      return relatedNodeKind_.getUnmodifiableView();
    }
    /**
     * <pre>
     * Determines which relation kinds for RelatedNodes should be returned in the
     * response.  If empty, all known RelatedNodes will be returned that match the
     * above filter.  Otherwise, only RelatedNodes with one of these requested
     * relation kinds, and matching the above filter, will be returned in the
     * response.
     * Importantly, this is not a list of node kinds; this is a list of edge kinds
     * (i.e. values for RelatedNode.relation_kind field).
     * </pre>
     *
     * <code>repeated string related_node_kind = 14;</code>
     */
    public int getRelatedNodeKindCount() {
      return relatedNodeKind_.size();
    }
    /**
     * <pre>
     * Determines which relation kinds for RelatedNodes should be returned in the
     * response.  If empty, all known RelatedNodes will be returned that match the
     * above filter.  Otherwise, only RelatedNodes with one of these requested
     * relation kinds, and matching the above filter, will be returned in the
     * response.
     * Importantly, this is not a list of node kinds; this is a list of edge kinds
     * (i.e. values for RelatedNode.relation_kind field).
     * </pre>
     *
     * <code>repeated string related_node_kind = 14;</code>
     */
    public java.lang.String getRelatedNodeKind(int index) {
      return relatedNodeKind_.get(index);
    }
    /**
     * <pre>
     * Determines which relation kinds for RelatedNodes should be returned in the
     * response.  If empty, all known RelatedNodes will be returned that match the
     * above filter.  Otherwise, only RelatedNodes with one of these requested
     * relation kinds, and matching the above filter, will be returned in the
     * response.
     * Importantly, this is not a list of node kinds; this is a list of edge kinds
     * (i.e. values for RelatedNode.relation_kind field).
     * </pre>
     *
     * <code>repeated string related_node_kind = 14;</code>
     */
    public com.google.protobuf.ByteString
        getRelatedNodeKindBytes(int index) {
      return relatedNodeKind_.getByteString(index);
    }
    /**
     * <pre>
     * Determines which relation kinds for RelatedNodes should be returned in the
     * response.  If empty, all known RelatedNodes will be returned that match the
     * above filter.  Otherwise, only RelatedNodes with one of these requested
     * relation kinds, and matching the above filter, will be returned in the
     * response.
     * Importantly, this is not a list of node kinds; this is a list of edge kinds
     * (i.e. values for RelatedNode.relation_kind field).
     * </pre>
     *
     * <code>repeated string related_node_kind = 14;</code>
     */
    public Builder setRelatedNodeKind(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureRelatedNodeKindIsMutable();
      relatedNodeKind_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines which relation kinds for RelatedNodes should be returned in the
     * response.  If empty, all known RelatedNodes will be returned that match the
     * above filter.  Otherwise, only RelatedNodes with one of these requested
     * relation kinds, and matching the above filter, will be returned in the
     * response.
     * Importantly, this is not a list of node kinds; this is a list of edge kinds
     * (i.e. values for RelatedNode.relation_kind field).
     * </pre>
     *
     * <code>repeated string related_node_kind = 14;</code>
     */
    public Builder addRelatedNodeKind(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureRelatedNodeKindIsMutable();
      relatedNodeKind_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines which relation kinds for RelatedNodes should be returned in the
     * response.  If empty, all known RelatedNodes will be returned that match the
     * above filter.  Otherwise, only RelatedNodes with one of these requested
     * relation kinds, and matching the above filter, will be returned in the
     * response.
     * Importantly, this is not a list of node kinds; this is a list of edge kinds
     * (i.e. values for RelatedNode.relation_kind field).
     * </pre>
     *
     * <code>repeated string related_node_kind = 14;</code>
     */
    public Builder addAllRelatedNodeKind(
        java.lang.Iterable<java.lang.String> values) {
      ensureRelatedNodeKindIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, relatedNodeKind_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines which relation kinds for RelatedNodes should be returned in the
     * response.  If empty, all known RelatedNodes will be returned that match the
     * above filter.  Otherwise, only RelatedNodes with one of these requested
     * relation kinds, and matching the above filter, will be returned in the
     * response.
     * Importantly, this is not a list of node kinds; this is a list of edge kinds
     * (i.e. values for RelatedNode.relation_kind field).
     * </pre>
     *
     * <code>repeated string related_node_kind = 14;</code>
     */
    public Builder clearRelatedNodeKind() {
      relatedNodeKind_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines which relation kinds for RelatedNodes should be returned in the
     * response.  If empty, all known RelatedNodes will be returned that match the
     * above filter.  Otherwise, only RelatedNodes with one of these requested
     * relation kinds, and matching the above filter, will be returned in the
     * response.
     * Importantly, this is not a list of node kinds; this is a list of edge kinds
     * (i.e. values for RelatedNode.relation_kind field).
     * </pre>
     *
     * <code>repeated string related_node_kind = 14;</code>
     */
    public Builder addRelatedNodeKindBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureRelatedNodeKindIsMutable();
      relatedNodeKind_.add(value);
      onChanged();
      return this;
    }

    private boolean anchorText_ ;
    /**
     * <pre>
     * Determines whether each Anchor in the response should have its text field
     * populated.
     * </pre>
     *
     * <code>bool anchor_text = 6;</code>
     */
    public boolean getAnchorText() {
      return anchorText_;
    }
    /**
     * <pre>
     * Determines whether each Anchor in the response should have its text field
     * populated.
     * </pre>
     *
     * <code>bool anchor_text = 6;</code>
     */
    public Builder setAnchorText(boolean value) {
      
      anchorText_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines whether each Anchor in the response should have its text field
     * populated.
     * </pre>
     *
     * <code>bool anchor_text = 6;</code>
     */
    public Builder clearAnchorText() {
      
      anchorText_ = false;
      onChanged();
      return this;
    }

    private boolean nodeDefinitions_ ;
    /**
     * <pre>
     * Determines whether each NodeInfo matching the above filters will have its
     * definition location populated, if known.
     * </pre>
     *
     * <code>bool node_definitions = 8;</code>
     */
    public boolean getNodeDefinitions() {
      return nodeDefinitions_;
    }
    /**
     * <pre>
     * Determines whether each NodeInfo matching the above filters will have its
     * definition location populated, if known.
     * </pre>
     *
     * <code>bool node_definitions = 8;</code>
     */
    public Builder setNodeDefinitions(boolean value) {
      
      nodeDefinitions_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * Determines whether each NodeInfo matching the above filters will have its
     * definition location populated, if known.
     * </pre>
     *
     * <code>bool node_definitions = 8;</code>
     */
    public Builder clearNodeDefinitions() {
      
      nodeDefinitions_ = false;
      onChanged();
      return this;
    }

    private int pageSize_ ;
    /**
     * <pre>
     * The cross-references matching a request are organized into logical pages.
     * The size of each page is a number of distinct cross-references
     * (definitions, references, documentation, and related nodes).
     * If page_token is empty, cross-references will be returned starting at the
     * beginning of the sequence; otherwise the starting point named by the
     * page_token will be used.  Legal values of page_token are returned by the
     * server in the next_page_token field of the CrossReferencesReply.  A page
     * token should be treated as an opaque value by the client, and is valid only
     * relative to a particular CrossReferencesRequest.  If an invalid page token
     * is requested, the server will return an error.
     * If page_size &gt; 0, at most that number of cross-references will be returned
     * by the service for this request (see ReferenceSet and CrossReferencesReply
     * below).  If page_size = 0, the default, the server will assume a reasonable
     * default page size.  The server will return an error if page_size &lt; 0.
     * The server is allowed to return fewer cross-references than the requested
     * page_size, even if more are available, save that it must return at least 1
     * edge if any are available at all.
     * </pre>
     *
     * <code>int32 page_size = 10;</code>
     */
    public int getPageSize() {
      return pageSize_;
    }
    /**
     * <pre>
     * The cross-references matching a request are organized into logical pages.
     * The size of each page is a number of distinct cross-references
     * (definitions, references, documentation, and related nodes).
     * If page_token is empty, cross-references will be returned starting at the
     * beginning of the sequence; otherwise the starting point named by the
     * page_token will be used.  Legal values of page_token are returned by the
     * server in the next_page_token field of the CrossReferencesReply.  A page
     * token should be treated as an opaque value by the client, and is valid only
     * relative to a particular CrossReferencesRequest.  If an invalid page token
     * is requested, the server will return an error.
     * If page_size &gt; 0, at most that number of cross-references will be returned
     * by the service for this request (see ReferenceSet and CrossReferencesReply
     * below).  If page_size = 0, the default, the server will assume a reasonable
     * default page size.  The server will return an error if page_size &lt; 0.
     * The server is allowed to return fewer cross-references than the requested
     * page_size, even if more are available, save that it must return at least 1
     * edge if any are available at all.
     * </pre>
     *
     * <code>int32 page_size = 10;</code>
     */
    public Builder setPageSize(int value) {
      
      pageSize_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The cross-references matching a request are organized into logical pages.
     * The size of each page is a number of distinct cross-references
     * (definitions, references, documentation, and related nodes).
     * If page_token is empty, cross-references will be returned starting at the
     * beginning of the sequence; otherwise the starting point named by the
     * page_token will be used.  Legal values of page_token are returned by the
     * server in the next_page_token field of the CrossReferencesReply.  A page
     * token should be treated as an opaque value by the client, and is valid only
     * relative to a particular CrossReferencesRequest.  If an invalid page token
     * is requested, the server will return an error.
     * If page_size &gt; 0, at most that number of cross-references will be returned
     * by the service for this request (see ReferenceSet and CrossReferencesReply
     * below).  If page_size = 0, the default, the server will assume a reasonable
     * default page size.  The server will return an error if page_size &lt; 0.
     * The server is allowed to return fewer cross-references than the requested
     * page_size, even if more are available, save that it must return at least 1
     * edge if any are available at all.
     * </pre>
     *
     * <code>int32 page_size = 10;</code>
     */
    public Builder clearPageSize() {
      
      pageSize_ = 0;
      onChanged();
      return this;
    }

    private java.lang.Object pageToken_ = "";
    /**
     * <code>string page_token = 11;</code>
     */
    public java.lang.String getPageToken() {
      java.lang.Object ref = pageToken_;
      if (!(ref instanceof java.lang.String)) {
        com.google.protobuf.ByteString bs =
            (com.google.protobuf.ByteString) ref;
        java.lang.String s = bs.toStringUtf8();
        pageToken_ = s;
        return s;
      } else {
        return (java.lang.String) ref;
      }
    }
    /**
     * <code>string page_token = 11;</code>
     */
    public com.google.protobuf.ByteString
        getPageTokenBytes() {
      java.lang.Object ref = pageToken_;
      if (ref instanceof String) {
        com.google.protobuf.ByteString b = 
            com.google.protobuf.ByteString.copyFromUtf8(
                (java.lang.String) ref);
        pageToken_ = b;
        return b;
      } else {
        return (com.google.protobuf.ByteString) ref;
      }
    }
    /**
     * <code>string page_token = 11;</code>
     */
    public Builder setPageToken(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      pageToken_ = value;
      onChanged();
      return this;
    }
    /**
     * <code>string page_token = 11;</code>
     */
    public Builder clearPageToken() {
      
      pageToken_ = getDefaultInstance().getPageToken();
      onChanged();
      return this;
    }
    /**
     * <code>string page_token = 11;</code>
     */
    public Builder setPageTokenBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      
      pageToken_ = value;
      onChanged();
      return this;
    }

    private int snippets_ = 0;
    /**
     * <pre>
     * What kind of snippets to return (or none).
     * </pre>
     *
     * <code>.kythe.proto.SnippetsKind snippets = 13;</code>
     */
    public int getSnippetsValue() {
      return snippets_;
    }
    /**
     * <pre>
     * What kind of snippets to return (or none).
     * </pre>
     *
     * <code>.kythe.proto.SnippetsKind snippets = 13;</code>
     */
    public Builder setSnippetsValue(int value) {
      snippets_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * What kind of snippets to return (or none).
     * </pre>
     *
     * <code>.kythe.proto.SnippetsKind snippets = 13;</code>
     */
    public com.google.devtools.kythe.proto.SnippetsKind getSnippets() {
      com.google.devtools.kythe.proto.SnippetsKind result = com.google.devtools.kythe.proto.SnippetsKind.valueOf(snippets_);
      return result == null ? com.google.devtools.kythe.proto.SnippetsKind.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * What kind of snippets to return (or none).
     * </pre>
     *
     * <code>.kythe.proto.SnippetsKind snippets = 13;</code>
     */
    public Builder setSnippets(com.google.devtools.kythe.proto.SnippetsKind value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      snippets_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * What kind of snippets to return (or none).
     * </pre>
     *
     * <code>.kythe.proto.SnippetsKind snippets = 13;</code>
     */
    public Builder clearSnippets() {
      
      snippets_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:kythe.proto.CrossReferencesRequest)
  }

  // @@protoc_insertion_point(class_scope:kythe.proto.CrossReferencesRequest)
  private static final com.google.devtools.kythe.proto.CrossReferencesRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.kythe.proto.CrossReferencesRequest();
  }

  public static com.google.devtools.kythe.proto.CrossReferencesRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<CrossReferencesRequest>
      PARSER = new com.google.protobuf.AbstractParser<CrossReferencesRequest>() {
    public CrossReferencesRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new CrossReferencesRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<CrossReferencesRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<CrossReferencesRequest> getParserForType() {
    return PARSER;
  }

  public com.google.devtools.kythe.proto.CrossReferencesRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

