// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kythe/proto/xref.proto

package com.google.devtools.kythe.proto;

public interface CrossReferencesRequestOrBuilder extends
    // @@protoc_insertion_point(interface_extends:kythe.proto.CrossReferencesRequest)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * Set of nodes for which to return their cross-references.  Must be
   * non-empty.
   * </pre>
   *
   * <code>repeated string ticket = 1;</code>
   */
  java.util.List<java.lang.String>
      getTicketList();
  /**
   * <pre>
   * Set of nodes for which to return their cross-references.  Must be
   * non-empty.
   * </pre>
   *
   * <code>repeated string ticket = 1;</code>
   */
  int getTicketCount();
  /**
   * <pre>
   * Set of nodes for which to return their cross-references.  Must be
   * non-empty.
   * </pre>
   *
   * <code>repeated string ticket = 1;</code>
   */
  java.lang.String getTicket(int index);
  /**
   * <pre>
   * Set of nodes for which to return their cross-references.  Must be
   * non-empty.
   * </pre>
   *
   * <code>repeated string ticket = 1;</code>
   */
  com.google.protobuf.ByteString
      getTicketBytes(int index);

  /**
   * <pre>
   * Determines what kind of definition anchors, if any, should be returned in
   * the response.  See the documentation for each DefinitionKind for more
   * information.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesRequest.DefinitionKind definition_kind = 2;</code>
   */
  int getDefinitionKindValue();
  /**
   * <pre>
   * Determines what kind of definition anchors, if any, should be returned in
   * the response.  See the documentation for each DefinitionKind for more
   * information.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesRequest.DefinitionKind definition_kind = 2;</code>
   */
  com.google.devtools.kythe.proto.CrossReferencesRequest.DefinitionKind getDefinitionKind();

  /**
   * <pre>
   * Determines what kind of declaration anchors, if any, should be returned in
   * the response.  See the documentation for each DeclarationKind for more
   * information.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesRequest.DeclarationKind declaration_kind = 7;</code>
   */
  int getDeclarationKindValue();
  /**
   * <pre>
   * Determines what kind of declaration anchors, if any, should be returned in
   * the response.  See the documentation for each DeclarationKind for more
   * information.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesRequest.DeclarationKind declaration_kind = 7;</code>
   */
  com.google.devtools.kythe.proto.CrossReferencesRequest.DeclarationKind getDeclarationKind();

  /**
   * <pre>
   * Determines what kind of reference anchors, if any, should be returned in
   * the response.  See the documentation for each ReferenceKind for more
   * information.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesRequest.ReferenceKind reference_kind = 3;</code>
   */
  int getReferenceKindValue();
  /**
   * <pre>
   * Determines what kind of reference anchors, if any, should be returned in
   * the response.  See the documentation for each ReferenceKind for more
   * information.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesRequest.ReferenceKind reference_kind = 3;</code>
   */
  com.google.devtools.kythe.proto.CrossReferencesRequest.ReferenceKind getReferenceKind();

  /**
   * <pre>
   * Determines what kind of callgraph information, if any, should be returned
   * in the response.  See the documentation for each CallerKind for more
   * information.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesRequest.CallerKind caller_kind = 12;</code>
   */
  int getCallerKindValue();
  /**
   * <pre>
   * Determines what kind of callgraph information, if any, should be returned
   * in the response.  See the documentation for each CallerKind for more
   * information.
   * </pre>
   *
   * <code>.kythe.proto.CrossReferencesRequest.CallerKind caller_kind = 12;</code>
   */
  com.google.devtools.kythe.proto.CrossReferencesRequest.CallerKind getCallerKind();

  /**
   * <pre>
   * Collection of filter globs that determines which facts will be returned for
   * the related nodes of each requested node.  If filter is empty or unset, no
   * node facts or related nodes are returned.  See EdgesRequest (graph.proto)
   * for the format of the filter globs.
   * </pre>
   *
   * <code>repeated string filter = 5;</code>
   */
  java.util.List<java.lang.String>
      getFilterList();
  /**
   * <pre>
   * Collection of filter globs that determines which facts will be returned for
   * the related nodes of each requested node.  If filter is empty or unset, no
   * node facts or related nodes are returned.  See EdgesRequest (graph.proto)
   * for the format of the filter globs.
   * </pre>
   *
   * <code>repeated string filter = 5;</code>
   */
  int getFilterCount();
  /**
   * <pre>
   * Collection of filter globs that determines which facts will be returned for
   * the related nodes of each requested node.  If filter is empty or unset, no
   * node facts or related nodes are returned.  See EdgesRequest (graph.proto)
   * for the format of the filter globs.
   * </pre>
   *
   * <code>repeated string filter = 5;</code>
   */
  java.lang.String getFilter(int index);
  /**
   * <pre>
   * Collection of filter globs that determines which facts will be returned for
   * the related nodes of each requested node.  If filter is empty or unset, no
   * node facts or related nodes are returned.  See EdgesRequest (graph.proto)
   * for the format of the filter globs.
   * </pre>
   *
   * <code>repeated string filter = 5;</code>
   */
  com.google.protobuf.ByteString
      getFilterBytes(int index);

  /**
   * <pre>
   * Determines which relation kinds for RelatedNodes should be returned in the
   * response.  If empty, all known RelatedNodes will be returned that match the
   * above filter.  Otherwise, only RelatedNodes with one of these requested
   * relation kinds, and matching the above filter, will be returned in the
   * response.
   * Importantly, this is not a list of node kinds; this is a list of edge kinds
   * (i.e. values for RelatedNode.relation_kind field).
   * </pre>
   *
   * <code>repeated string related_node_kind = 14;</code>
   */
  java.util.List<java.lang.String>
      getRelatedNodeKindList();
  /**
   * <pre>
   * Determines which relation kinds for RelatedNodes should be returned in the
   * response.  If empty, all known RelatedNodes will be returned that match the
   * above filter.  Otherwise, only RelatedNodes with one of these requested
   * relation kinds, and matching the above filter, will be returned in the
   * response.
   * Importantly, this is not a list of node kinds; this is a list of edge kinds
   * (i.e. values for RelatedNode.relation_kind field).
   * </pre>
   *
   * <code>repeated string related_node_kind = 14;</code>
   */
  int getRelatedNodeKindCount();
  /**
   * <pre>
   * Determines which relation kinds for RelatedNodes should be returned in the
   * response.  If empty, all known RelatedNodes will be returned that match the
   * above filter.  Otherwise, only RelatedNodes with one of these requested
   * relation kinds, and matching the above filter, will be returned in the
   * response.
   * Importantly, this is not a list of node kinds; this is a list of edge kinds
   * (i.e. values for RelatedNode.relation_kind field).
   * </pre>
   *
   * <code>repeated string related_node_kind = 14;</code>
   */
  java.lang.String getRelatedNodeKind(int index);
  /**
   * <pre>
   * Determines which relation kinds for RelatedNodes should be returned in the
   * response.  If empty, all known RelatedNodes will be returned that match the
   * above filter.  Otherwise, only RelatedNodes with one of these requested
   * relation kinds, and matching the above filter, will be returned in the
   * response.
   * Importantly, this is not a list of node kinds; this is a list of edge kinds
   * (i.e. values for RelatedNode.relation_kind field).
   * </pre>
   *
   * <code>repeated string related_node_kind = 14;</code>
   */
  com.google.protobuf.ByteString
      getRelatedNodeKindBytes(int index);

  /**
   * <pre>
   * Determines whether each Anchor in the response should have its text field
   * populated.
   * </pre>
   *
   * <code>bool anchor_text = 6;</code>
   */
  boolean getAnchorText();

  /**
   * <pre>
   * Determines whether each NodeInfo matching the above filters will have its
   * definition location populated, if known.
   * </pre>
   *
   * <code>bool node_definitions = 8;</code>
   */
  boolean getNodeDefinitions();

  /**
   * <pre>
   * The cross-references matching a request are organized into logical pages.
   * The size of each page is a number of distinct cross-references
   * (definitions, references, documentation, and related nodes).
   * If page_token is empty, cross-references will be returned starting at the
   * beginning of the sequence; otherwise the starting point named by the
   * page_token will be used.  Legal values of page_token are returned by the
   * server in the next_page_token field of the CrossReferencesReply.  A page
   * token should be treated as an opaque value by the client, and is valid only
   * relative to a particular CrossReferencesRequest.  If an invalid page token
   * is requested, the server will return an error.
   * If page_size &gt; 0, at most that number of cross-references will be returned
   * by the service for this request (see ReferenceSet and CrossReferencesReply
   * below).  If page_size = 0, the default, the server will assume a reasonable
   * default page size.  The server will return an error if page_size &lt; 0.
   * The server is allowed to return fewer cross-references than the requested
   * page_size, even if more are available, save that it must return at least 1
   * edge if any are available at all.
   * </pre>
   *
   * <code>int32 page_size = 10;</code>
   */
  int getPageSize();

  /**
   * <code>string page_token = 11;</code>
   */
  java.lang.String getPageToken();
  /**
   * <code>string page_token = 11;</code>
   */
  com.google.protobuf.ByteString
      getPageTokenBytes();

  /**
   * <pre>
   * What kind of snippets to return (or none).
   * </pre>
   *
   * <code>.kythe.proto.SnippetsKind snippets = 13;</code>
   */
  int getSnippetsValue();
  /**
   * <pre>
   * What kind of snippets to return (or none).
   * </pre>
   *
   * <code>.kythe.proto.SnippetsKind snippets = 13;</code>
   */
  com.google.devtools.kythe.proto.SnippetsKind getSnippets();
}
