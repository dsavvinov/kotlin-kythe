// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kythe/proto/xref.proto

package com.google.devtools.kythe.proto;

public interface DecorationsReplyOrBuilder extends
    // @@protoc_insertion_point(interface_extends:kythe.proto.DecorationsReply)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The normalized location for which decorations are returned.
   * </pre>
   *
   * <code>.kythe.proto.Location location = 1;</code>
   */
  boolean hasLocation();
  /**
   * <pre>
   * The normalized location for which decorations are returned.
   * </pre>
   *
   * <code>.kythe.proto.Location location = 1;</code>
   */
  com.google.devtools.kythe.proto.Location getLocation();
  /**
   * <pre>
   * The normalized location for which decorations are returned.
   * </pre>
   *
   * <code>.kythe.proto.Location location = 1;</code>
   */
  com.google.devtools.kythe.proto.LocationOrBuilder getLocationOrBuilder();

  /**
   * <pre>
   * The encoded source text for the selected window.
   * </pre>
   *
   * <code>bytes source_text = 2;</code>
   */
  com.google.protobuf.ByteString getSourceText();

  /**
   * <code>string encoding = 3;</code>
   */
  java.lang.String getEncoding();
  /**
   * <code>string encoding = 3;</code>
   */
  com.google.protobuf.ByteString
      getEncodingBytes();

  /**
   * <pre>
   * The reference edges located in the specified window. Sorted in the order
   * of their position in the file (first by start offset, then by end offset).
   * </pre>
   *
   * <code>repeated .kythe.proto.DecorationsReply.Reference reference = 4;</code>
   */
  java.util.List<com.google.devtools.kythe.proto.DecorationsReply.Reference> 
      getReferenceList();
  /**
   * <pre>
   * The reference edges located in the specified window. Sorted in the order
   * of their position in the file (first by start offset, then by end offset).
   * </pre>
   *
   * <code>repeated .kythe.proto.DecorationsReply.Reference reference = 4;</code>
   */
  com.google.devtools.kythe.proto.DecorationsReply.Reference getReference(int index);
  /**
   * <pre>
   * The reference edges located in the specified window. Sorted in the order
   * of their position in the file (first by start offset, then by end offset).
   * </pre>
   *
   * <code>repeated .kythe.proto.DecorationsReply.Reference reference = 4;</code>
   */
  int getReferenceCount();
  /**
   * <pre>
   * The reference edges located in the specified window. Sorted in the order
   * of their position in the file (first by start offset, then by end offset).
   * </pre>
   *
   * <code>repeated .kythe.proto.DecorationsReply.Reference reference = 4;</code>
   */
  java.util.List<? extends com.google.devtools.kythe.proto.DecorationsReply.ReferenceOrBuilder> 
      getReferenceOrBuilderList();
  /**
   * <pre>
   * The reference edges located in the specified window. Sorted in the order
   * of their position in the file (first by start offset, then by end offset).
   * </pre>
   *
   * <code>repeated .kythe.proto.DecorationsReply.Reference reference = 4;</code>
   */
  com.google.devtools.kythe.proto.DecorationsReply.ReferenceOrBuilder getReferenceOrBuilder(
      int index);

  /**
   * <pre>
   * If requested, a list of diagnostics applying to the requested file location.
   * </pre>
   *
   * <code>repeated .kythe.proto.common.Diagnostic diagnostic = 5;</code>
   */
  java.util.List<com.google.devtools.kythe.proto.Diagnostic> 
      getDiagnosticList();
  /**
   * <pre>
   * If requested, a list of diagnostics applying to the requested file location.
   * </pre>
   *
   * <code>repeated .kythe.proto.common.Diagnostic diagnostic = 5;</code>
   */
  com.google.devtools.kythe.proto.Diagnostic getDiagnostic(int index);
  /**
   * <pre>
   * If requested, a list of diagnostics applying to the requested file location.
   * </pre>
   *
   * <code>repeated .kythe.proto.common.Diagnostic diagnostic = 5;</code>
   */
  int getDiagnosticCount();
  /**
   * <pre>
   * If requested, a list of diagnostics applying to the requested file location.
   * </pre>
   *
   * <code>repeated .kythe.proto.common.Diagnostic diagnostic = 5;</code>
   */
  java.util.List<? extends com.google.devtools.kythe.proto.DiagnosticOrBuilder> 
      getDiagnosticOrBuilderList();
  /**
   * <pre>
   * If requested, a list of diagnostics applying to the requested file location.
   * </pre>
   *
   * <code>repeated .kythe.proto.common.Diagnostic diagnostic = 5;</code>
   */
  com.google.devtools.kythe.proto.DiagnosticOrBuilder getDiagnosticOrBuilder(
      int index);

  /**
   * <pre>
   * This field will contain one entry, keyed by ticket, for each distinct node
   * referenced by a reference edge that has at least 1 non-filtered fact.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.common.NodeInfo&gt; nodes = 15;</code>
   */
  int getNodesCount();
  /**
   * <pre>
   * This field will contain one entry, keyed by ticket, for each distinct node
   * referenced by a reference edge that has at least 1 non-filtered fact.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.common.NodeInfo&gt; nodes = 15;</code>
   */
  boolean containsNodes(
      java.lang.String key);
  /**
   * Use {@link #getNodesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.devtools.kythe.proto.NodeInfo>
  getNodes();
  /**
   * <pre>
   * This field will contain one entry, keyed by ticket, for each distinct node
   * referenced by a reference edge that has at least 1 non-filtered fact.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.common.NodeInfo&gt; nodes = 15;</code>
   */
  java.util.Map<java.lang.String, com.google.devtools.kythe.proto.NodeInfo>
  getNodesMap();
  /**
   * <pre>
   * This field will contain one entry, keyed by ticket, for each distinct node
   * referenced by a reference edge that has at least 1 non-filtered fact.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.common.NodeInfo&gt; nodes = 15;</code>
   */

  com.google.devtools.kythe.proto.NodeInfo getNodesOrDefault(
      java.lang.String key,
      com.google.devtools.kythe.proto.NodeInfo defaultValue);
  /**
   * <pre>
   * This field will contain one entry, keyed by ticket, for each distinct node
   * referenced by a reference edge that has at least 1 non-filtered fact.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.common.NodeInfo&gt; nodes = 15;</code>
   */

  com.google.devtools.kythe.proto.NodeInfo getNodesOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Each anchor cited as a target definition in the references/overrides.  The
   * map is keyed by each anchor's ticket.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.Anchor&gt; definition_locations = 16;</code>
   */
  int getDefinitionLocationsCount();
  /**
   * <pre>
   * Each anchor cited as a target definition in the references/overrides.  The
   * map is keyed by each anchor's ticket.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.Anchor&gt; definition_locations = 16;</code>
   */
  boolean containsDefinitionLocations(
      java.lang.String key);
  /**
   * Use {@link #getDefinitionLocationsMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.devtools.kythe.proto.Anchor>
  getDefinitionLocations();
  /**
   * <pre>
   * Each anchor cited as a target definition in the references/overrides.  The
   * map is keyed by each anchor's ticket.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.Anchor&gt; definition_locations = 16;</code>
   */
  java.util.Map<java.lang.String, com.google.devtools.kythe.proto.Anchor>
  getDefinitionLocationsMap();
  /**
   * <pre>
   * Each anchor cited as a target definition in the references/overrides.  The
   * map is keyed by each anchor's ticket.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.Anchor&gt; definition_locations = 16;</code>
   */

  com.google.devtools.kythe.proto.Anchor getDefinitionLocationsOrDefault(
      java.lang.String key,
      com.google.devtools.kythe.proto.Anchor defaultValue);
  /**
   * <pre>
   * Each anchor cited as a target definition in the references/overrides.  The
   * map is keyed by each anchor's ticket.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.Anchor&gt; definition_locations = 16;</code>
   */

  com.google.devtools.kythe.proto.Anchor getDefinitionLocationsOrThrow(
      java.lang.String key);

  /**
   * <pre>
   * Maps from semantic nodes on the right-hand side of defines/binding
   * references to the list of their overrides.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.DecorationsReply.Overrides&gt; extends_overrides = 17;</code>
   */
  int getExtendsOverridesCount();
  /**
   * <pre>
   * Maps from semantic nodes on the right-hand side of defines/binding
   * references to the list of their overrides.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.DecorationsReply.Overrides&gt; extends_overrides = 17;</code>
   */
  boolean containsExtendsOverrides(
      java.lang.String key);
  /**
   * Use {@link #getExtendsOverridesMap()} instead.
   */
  @java.lang.Deprecated
  java.util.Map<java.lang.String, com.google.devtools.kythe.proto.DecorationsReply.Overrides>
  getExtendsOverrides();
  /**
   * <pre>
   * Maps from semantic nodes on the right-hand side of defines/binding
   * references to the list of their overrides.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.DecorationsReply.Overrides&gt; extends_overrides = 17;</code>
   */
  java.util.Map<java.lang.String, com.google.devtools.kythe.proto.DecorationsReply.Overrides>
  getExtendsOverridesMap();
  /**
   * <pre>
   * Maps from semantic nodes on the right-hand side of defines/binding
   * references to the list of their overrides.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.DecorationsReply.Overrides&gt; extends_overrides = 17;</code>
   */

  com.google.devtools.kythe.proto.DecorationsReply.Overrides getExtendsOverridesOrDefault(
      java.lang.String key,
      com.google.devtools.kythe.proto.DecorationsReply.Overrides defaultValue);
  /**
   * <pre>
   * Maps from semantic nodes on the right-hand side of defines/binding
   * references to the list of their overrides.
   * </pre>
   *
   * <code>map&lt;string, .kythe.proto.DecorationsReply.Overrides&gt; extends_overrides = 17;</code>
   */

  com.google.devtools.kythe.proto.DecorationsReply.Overrides getExtendsOverridesOrThrow(
      java.lang.String key);
}
