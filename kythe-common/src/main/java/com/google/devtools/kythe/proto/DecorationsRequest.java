// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kythe/proto/xref.proto

package com.google.devtools.kythe.proto;

/**
 * Protobuf type {@code kythe.proto.DecorationsRequest}
 */
public  final class DecorationsRequest extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:kythe.proto.DecorationsRequest)
    DecorationsRequestOrBuilder {
private static final long serialVersionUID = 0L;
  // Use DecorationsRequest.newBuilder() to construct.
  private DecorationsRequest(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private DecorationsRequest() {
    spanKind_ = 0;
    dirtyBuffer_ = com.google.protobuf.ByteString.EMPTY;
    sourceText_ = false;
    references_ = false;
    targetDefinitions_ = false;
    filter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    extendsOverrides_ = false;
    diagnostics_ = false;
    snippets_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private DecorationsRequest(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            com.google.devtools.kythe.proto.Location.Builder subBuilder = null;
            if (location_ != null) {
              subBuilder = location_.toBuilder();
            }
            location_ = input.readMessage(com.google.devtools.kythe.proto.Location.parser(), extensionRegistry);
            if (subBuilder != null) {
              subBuilder.mergeFrom(location_);
              location_ = subBuilder.buildPartial();
            }

            break;
          }
          case 18: {

            dirtyBuffer_ = input.readBytes();
            break;
          }
          case 24: {

            sourceText_ = input.readBool();
            break;
          }
          case 32: {

            references_ = input.readBool();
            break;
          }
          case 42: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
              filter_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000040;
            }
            filter_.add(s);
            break;
          }
          case 48: {

            targetDefinitions_ = input.readBool();
            break;
          }
          case 56: {

            extendsOverrides_ = input.readBool();
            break;
          }
          case 64: {

            diagnostics_ = input.readBool();
            break;
          }
          case 72: {
            int rawValue = input.readEnum();

            snippets_ = rawValue;
            break;
          }
          case 80: {
            int rawValue = input.readEnum();

            spanKind_ = rawValue;
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000040) == 0x00000040)) {
        filter_ = filter_.getUnmodifiableView();
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.kythe.proto.Xref.internal_static_kythe_proto_DecorationsRequest_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.kythe.proto.Xref.internal_static_kythe_proto_DecorationsRequest_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.kythe.proto.DecorationsRequest.class, com.google.devtools.kythe.proto.DecorationsRequest.Builder.class);
  }

  /**
   * Protobuf enum {@code kythe.proto.DecorationsRequest.SpanKind}
   */
  public enum SpanKind
      implements com.google.protobuf.ProtocolMessageEnum {
    /**
     * <pre>
     * If the location is a SPAN, only decorations contained within the
     * specified window of the file are returned.  This is the default behavior.
     * </pre>
     *
     * <code>WITHIN_SPAN = 0;</code>
     */
    WITHIN_SPAN(0),
    /**
     * <pre>
     * If the location is a SPAN, any decorations that surround it are returned.
     * </pre>
     *
     * <code>AROUND_SPAN = 1;</code>
     */
    AROUND_SPAN(1),
    UNRECOGNIZED(-1),
    ;

    /**
     * <pre>
     * If the location is a SPAN, only decorations contained within the
     * specified window of the file are returned.  This is the default behavior.
     * </pre>
     *
     * <code>WITHIN_SPAN = 0;</code>
     */
    public static final int WITHIN_SPAN_VALUE = 0;
    /**
     * <pre>
     * If the location is a SPAN, any decorations that surround it are returned.
     * </pre>
     *
     * <code>AROUND_SPAN = 1;</code>
     */
    public static final int AROUND_SPAN_VALUE = 1;


    public final int getNumber() {
      if (this == UNRECOGNIZED) {
        throw new java.lang.IllegalArgumentException(
            "Can't get the number of an unknown enum value.");
      }
      return value;
    }

    /**
     * @deprecated Use {@link #forNumber(int)} instead.
     */
    @java.lang.Deprecated
    public static SpanKind valueOf(int value) {
      return forNumber(value);
    }

    public static SpanKind forNumber(int value) {
      switch (value) {
        case 0: return WITHIN_SPAN;
        case 1: return AROUND_SPAN;
        default: return null;
      }
    }

    public static com.google.protobuf.Internal.EnumLiteMap<SpanKind>
        internalGetValueMap() {
      return internalValueMap;
    }
    private static final com.google.protobuf.Internal.EnumLiteMap<
        SpanKind> internalValueMap =
          new com.google.protobuf.Internal.EnumLiteMap<SpanKind>() {
            public SpanKind findValueByNumber(int number) {
              return SpanKind.forNumber(number);
            }
          };

    public final com.google.protobuf.Descriptors.EnumValueDescriptor
        getValueDescriptor() {
      return getDescriptor().getValues().get(ordinal());
    }
    public final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptorForType() {
      return getDescriptor();
    }
    public static final com.google.protobuf.Descriptors.EnumDescriptor
        getDescriptor() {
      return com.google.devtools.kythe.proto.DecorationsRequest.getDescriptor().getEnumTypes().get(0);
    }

    private static final SpanKind[] VALUES = values();

    public static SpanKind valueOf(
        com.google.protobuf.Descriptors.EnumValueDescriptor desc) {
      if (desc.getType() != getDescriptor()) {
        throw new java.lang.IllegalArgumentException(
          "EnumValueDescriptor is not for this type.");
      }
      if (desc.getIndex() == -1) {
        return UNRECOGNIZED;
      }
      return VALUES[desc.getIndex()];
    }

    private final int value;

    private SpanKind(int value) {
      this.value = value;
    }

    // @@protoc_insertion_point(enum_scope:kythe.proto.DecorationsRequest.SpanKind)
  }

  private int bitField0_;
  public static final int LOCATION_FIELD_NUMBER = 1;
  private com.google.devtools.kythe.proto.Location location_;
  /**
   * <pre>
   * The location of the file to fetch decorations for.  The ticket of location
   * must be non-empty.  It is an error in any case if location is invalid.
   * </pre>
   *
   * <code>.kythe.proto.Location location = 1;</code>
   */
  public boolean hasLocation() {
    return location_ != null;
  }
  /**
   * <pre>
   * The location of the file to fetch decorations for.  The ticket of location
   * must be non-empty.  It is an error in any case if location is invalid.
   * </pre>
   *
   * <code>.kythe.proto.Location location = 1;</code>
   */
  public com.google.devtools.kythe.proto.Location getLocation() {
    return location_ == null ? com.google.devtools.kythe.proto.Location.getDefaultInstance() : location_;
  }
  /**
   * <pre>
   * The location of the file to fetch decorations for.  The ticket of location
   * must be non-empty.  It is an error in any case if location is invalid.
   * </pre>
   *
   * <code>.kythe.proto.Location location = 1;</code>
   */
  public com.google.devtools.kythe.proto.LocationOrBuilder getLocationOrBuilder() {
    return getLocation();
  }

  public static final int SPAN_KIND_FIELD_NUMBER = 10;
  private int spanKind_;
  /**
   * <pre>
   * How to treat SPAN locations.
   * </pre>
   *
   * <code>.kythe.proto.DecorationsRequest.SpanKind span_kind = 10;</code>
   */
  public int getSpanKindValue() {
    return spanKind_;
  }
  /**
   * <pre>
   * How to treat SPAN locations.
   * </pre>
   *
   * <code>.kythe.proto.DecorationsRequest.SpanKind span_kind = 10;</code>
   */
  public com.google.devtools.kythe.proto.DecorationsRequest.SpanKind getSpanKind() {
    com.google.devtools.kythe.proto.DecorationsRequest.SpanKind result = com.google.devtools.kythe.proto.DecorationsRequest.SpanKind.valueOf(spanKind_);
    return result == null ? com.google.devtools.kythe.proto.DecorationsRequest.SpanKind.UNRECOGNIZED : result;
  }

  public static final int DIRTY_BUFFER_FIELD_NUMBER = 2;
  private com.google.protobuf.ByteString dirtyBuffer_;
  /**
   * <pre>
   * If dirty_buffer is non-empty, the results will be adjusted (patched) to
   * account for the regions of the specified file differing from the contents
   * of the dirty buffer.
   * </pre>
   *
   * <code>bytes dirty_buffer = 2;</code>
   */
  public com.google.protobuf.ByteString getDirtyBuffer() {
    return dirtyBuffer_;
  }

  public static final int SOURCE_TEXT_FIELD_NUMBER = 3;
  private boolean sourceText_;
  /**
   * <pre>
   * If true, return the encoded source text for the selected window.  Source
   * text is not affected by patching.
   * </pre>
   *
   * <code>bool source_text = 3;</code>
   */
  public boolean getSourceText() {
    return sourceText_;
  }

  public static final int REFERENCES_FIELD_NUMBER = 4;
  private boolean references_;
  /**
   * <pre>
   * If true, return reference edges whose source nodes are located in the
   * selected window.  References are affected by patching.
   * </pre>
   *
   * <code>bool references = 4;</code>
   */
  public boolean getReferences() {
    return references_;
  }

  public static final int TARGET_DEFINITIONS_FIELD_NUMBER = 6;
  private boolean targetDefinitions_;
  /**
   * <pre>
   * If true, return definition locations, if possible, for each returned
   * reference target in the DecorationsReply.
   * </pre>
   *
   * <code>bool target_definitions = 6;</code>
   */
  public boolean getTargetDefinitions() {
    return targetDefinitions_;
  }

  public static final int FILTER_FIELD_NUMBER = 5;
  private com.google.protobuf.LazyStringList filter_;
  /**
   * <pre>
   * A collection of filter globs that specify which facts (by name) should be
   * returned for each node.  If filter is empty or unset, no node facts are
   * returned.  The filter applies to ALL referenced nodes.  See EdgesRequest
   * (graph.proto) for the format of the filter globs.
   * </pre>
   *
   * <code>repeated string filter = 5;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getFilterList() {
    return filter_;
  }
  /**
   * <pre>
   * A collection of filter globs that specify which facts (by name) should be
   * returned for each node.  If filter is empty or unset, no node facts are
   * returned.  The filter applies to ALL referenced nodes.  See EdgesRequest
   * (graph.proto) for the format of the filter globs.
   * </pre>
   *
   * <code>repeated string filter = 5;</code>
   */
  public int getFilterCount() {
    return filter_.size();
  }
  /**
   * <pre>
   * A collection of filter globs that specify which facts (by name) should be
   * returned for each node.  If filter is empty or unset, no node facts are
   * returned.  The filter applies to ALL referenced nodes.  See EdgesRequest
   * (graph.proto) for the format of the filter globs.
   * </pre>
   *
   * <code>repeated string filter = 5;</code>
   */
  public java.lang.String getFilter(int index) {
    return filter_.get(index);
  }
  /**
   * <pre>
   * A collection of filter globs that specify which facts (by name) should be
   * returned for each node.  If filter is empty or unset, no node facts are
   * returned.  The filter applies to ALL referenced nodes.  See EdgesRequest
   * (graph.proto) for the format of the filter globs.
   * </pre>
   *
   * <code>repeated string filter = 5;</code>
   */
  public com.google.protobuf.ByteString
      getFilterBytes(int index) {
    return filter_.getByteString(index);
  }

  public static final int EXTENDS_OVERRIDES_FIELD_NUMBER = 7;
  private boolean extendsOverrides_;
  /**
   * <pre>
   * If true, for every defines/binding Reference in the reply, a NodeInfo
   * will be provided for each node that Reference extends or overrides.
   * Furthermore, if definition_locations is true, the response's
   * definition_locations field will include (where possible) the locations of
   * the definitions of the nodes that are extended or overridden.
   * </pre>
   *
   * <code>bool extends_overrides = 7;</code>
   */
  public boolean getExtendsOverrides() {
    return extendsOverrides_;
  }

  public static final int DIAGNOSTICS_FIELD_NUMBER = 8;
  private boolean diagnostics_;
  /**
   * <pre>
   * If true, return diagnostics for the given file.
   * </pre>
   *
   * <code>bool diagnostics = 8;</code>
   */
  public boolean getDiagnostics() {
    return diagnostics_;
  }

  public static final int SNIPPETS_FIELD_NUMBER = 9;
  private int snippets_;
  /**
   * <pre>
   * What kind of snippets to return (or none).
   * </pre>
   *
   * <code>.kythe.proto.SnippetsKind snippets = 9;</code>
   */
  public int getSnippetsValue() {
    return snippets_;
  }
  /**
   * <pre>
   * What kind of snippets to return (or none).
   * </pre>
   *
   * <code>.kythe.proto.SnippetsKind snippets = 9;</code>
   */
  public com.google.devtools.kythe.proto.SnippetsKind getSnippets() {
    com.google.devtools.kythe.proto.SnippetsKind result = com.google.devtools.kythe.proto.SnippetsKind.valueOf(snippets_);
    return result == null ? com.google.devtools.kythe.proto.SnippetsKind.UNRECOGNIZED : result;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (location_ != null) {
      output.writeMessage(1, getLocation());
    }
    if (!dirtyBuffer_.isEmpty()) {
      output.writeBytes(2, dirtyBuffer_);
    }
    if (sourceText_ != false) {
      output.writeBool(3, sourceText_);
    }
    if (references_ != false) {
      output.writeBool(4, references_);
    }
    for (int i = 0; i < filter_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 5, filter_.getRaw(i));
    }
    if (targetDefinitions_ != false) {
      output.writeBool(6, targetDefinitions_);
    }
    if (extendsOverrides_ != false) {
      output.writeBool(7, extendsOverrides_);
    }
    if (diagnostics_ != false) {
      output.writeBool(8, diagnostics_);
    }
    if (snippets_ != com.google.devtools.kythe.proto.SnippetsKind.NONE.getNumber()) {
      output.writeEnum(9, snippets_);
    }
    if (spanKind_ != com.google.devtools.kythe.proto.DecorationsRequest.SpanKind.WITHIN_SPAN.getNumber()) {
      output.writeEnum(10, spanKind_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (location_ != null) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(1, getLocation());
    }
    if (!dirtyBuffer_.isEmpty()) {
      size += com.google.protobuf.CodedOutputStream
        .computeBytesSize(2, dirtyBuffer_);
    }
    if (sourceText_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(3, sourceText_);
    }
    if (references_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(4, references_);
    }
    {
      int dataSize = 0;
      for (int i = 0; i < filter_.size(); i++) {
        dataSize += computeStringSizeNoTag(filter_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getFilterList().size();
    }
    if (targetDefinitions_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(6, targetDefinitions_);
    }
    if (extendsOverrides_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(7, extendsOverrides_);
    }
    if (diagnostics_ != false) {
      size += com.google.protobuf.CodedOutputStream
        .computeBoolSize(8, diagnostics_);
    }
    if (snippets_ != com.google.devtools.kythe.proto.SnippetsKind.NONE.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(9, snippets_);
    }
    if (spanKind_ != com.google.devtools.kythe.proto.DecorationsRequest.SpanKind.WITHIN_SPAN.getNumber()) {
      size += com.google.protobuf.CodedOutputStream
        .computeEnumSize(10, spanKind_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.kythe.proto.DecorationsRequest)) {
      return super.equals(obj);
    }
    com.google.devtools.kythe.proto.DecorationsRequest other = (com.google.devtools.kythe.proto.DecorationsRequest) obj;

    boolean result = true;
    result = result && (hasLocation() == other.hasLocation());
    if (hasLocation()) {
      result = result && getLocation()
          .equals(other.getLocation());
    }
    result = result && spanKind_ == other.spanKind_;
    result = result && getDirtyBuffer()
        .equals(other.getDirtyBuffer());
    result = result && (getSourceText()
        == other.getSourceText());
    result = result && (getReferences()
        == other.getReferences());
    result = result && (getTargetDefinitions()
        == other.getTargetDefinitions());
    result = result && getFilterList()
        .equals(other.getFilterList());
    result = result && (getExtendsOverrides()
        == other.getExtendsOverrides());
    result = result && (getDiagnostics()
        == other.getDiagnostics());
    result = result && snippets_ == other.snippets_;
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (hasLocation()) {
      hash = (37 * hash) + LOCATION_FIELD_NUMBER;
      hash = (53 * hash) + getLocation().hashCode();
    }
    hash = (37 * hash) + SPAN_KIND_FIELD_NUMBER;
    hash = (53 * hash) + spanKind_;
    hash = (37 * hash) + DIRTY_BUFFER_FIELD_NUMBER;
    hash = (53 * hash) + getDirtyBuffer().hashCode();
    hash = (37 * hash) + SOURCE_TEXT_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getSourceText());
    hash = (37 * hash) + REFERENCES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getReferences());
    hash = (37 * hash) + TARGET_DEFINITIONS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getTargetDefinitions());
    if (getFilterCount() > 0) {
      hash = (37 * hash) + FILTER_FIELD_NUMBER;
      hash = (53 * hash) + getFilterList().hashCode();
    }
    hash = (37 * hash) + EXTENDS_OVERRIDES_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getExtendsOverrides());
    hash = (37 * hash) + DIAGNOSTICS_FIELD_NUMBER;
    hash = (53 * hash) + com.google.protobuf.Internal.hashBoolean(
        getDiagnostics());
    hash = (37 * hash) + SNIPPETS_FIELD_NUMBER;
    hash = (53 * hash) + snippets_;
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.kythe.proto.DecorationsRequest parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.kythe.proto.DecorationsRequest parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.DecorationsRequest parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.kythe.proto.DecorationsRequest parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.DecorationsRequest parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.kythe.proto.DecorationsRequest parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.DecorationsRequest parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.kythe.proto.DecorationsRequest parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.DecorationsRequest parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.kythe.proto.DecorationsRequest parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.DecorationsRequest parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.kythe.proto.DecorationsRequest parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.kythe.proto.DecorationsRequest prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * Protobuf type {@code kythe.proto.DecorationsRequest}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:kythe.proto.DecorationsRequest)
      com.google.devtools.kythe.proto.DecorationsRequestOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.kythe.proto.Xref.internal_static_kythe_proto_DecorationsRequest_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.kythe.proto.Xref.internal_static_kythe_proto_DecorationsRequest_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.kythe.proto.DecorationsRequest.class, com.google.devtools.kythe.proto.DecorationsRequest.Builder.class);
    }

    // Construct using com.google.devtools.kythe.proto.DecorationsRequest.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      if (locationBuilder_ == null) {
        location_ = null;
      } else {
        location_ = null;
        locationBuilder_ = null;
      }
      spanKind_ = 0;

      dirtyBuffer_ = com.google.protobuf.ByteString.EMPTY;

      sourceText_ = false;

      references_ = false;

      targetDefinitions_ = false;

      filter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000040);
      extendsOverrides_ = false;

      diagnostics_ = false;

      snippets_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.kythe.proto.Xref.internal_static_kythe_proto_DecorationsRequest_descriptor;
    }

    public com.google.devtools.kythe.proto.DecorationsRequest getDefaultInstanceForType() {
      return com.google.devtools.kythe.proto.DecorationsRequest.getDefaultInstance();
    }

    public com.google.devtools.kythe.proto.DecorationsRequest build() {
      com.google.devtools.kythe.proto.DecorationsRequest result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.devtools.kythe.proto.DecorationsRequest buildPartial() {
      com.google.devtools.kythe.proto.DecorationsRequest result = new com.google.devtools.kythe.proto.DecorationsRequest(this);
      int from_bitField0_ = bitField0_;
      int to_bitField0_ = 0;
      if (locationBuilder_ == null) {
        result.location_ = location_;
      } else {
        result.location_ = locationBuilder_.build();
      }
      result.spanKind_ = spanKind_;
      result.dirtyBuffer_ = dirtyBuffer_;
      result.sourceText_ = sourceText_;
      result.references_ = references_;
      result.targetDefinitions_ = targetDefinitions_;
      if (((bitField0_ & 0x00000040) == 0x00000040)) {
        filter_ = filter_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000040);
      }
      result.filter_ = filter_;
      result.extendsOverrides_ = extendsOverrides_;
      result.diagnostics_ = diagnostics_;
      result.snippets_ = snippets_;
      result.bitField0_ = to_bitField0_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.kythe.proto.DecorationsRequest) {
        return mergeFrom((com.google.devtools.kythe.proto.DecorationsRequest)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.kythe.proto.DecorationsRequest other) {
      if (other == com.google.devtools.kythe.proto.DecorationsRequest.getDefaultInstance()) return this;
      if (other.hasLocation()) {
        mergeLocation(other.getLocation());
      }
      if (other.spanKind_ != 0) {
        setSpanKindValue(other.getSpanKindValue());
      }
      if (other.getDirtyBuffer() != com.google.protobuf.ByteString.EMPTY) {
        setDirtyBuffer(other.getDirtyBuffer());
      }
      if (other.getSourceText() != false) {
        setSourceText(other.getSourceText());
      }
      if (other.getReferences() != false) {
        setReferences(other.getReferences());
      }
      if (other.getTargetDefinitions() != false) {
        setTargetDefinitions(other.getTargetDefinitions());
      }
      if (!other.filter_.isEmpty()) {
        if (filter_.isEmpty()) {
          filter_ = other.filter_;
          bitField0_ = (bitField0_ & ~0x00000040);
        } else {
          ensureFilterIsMutable();
          filter_.addAll(other.filter_);
        }
        onChanged();
      }
      if (other.getExtendsOverrides() != false) {
        setExtendsOverrides(other.getExtendsOverrides());
      }
      if (other.getDiagnostics() != false) {
        setDiagnostics(other.getDiagnostics());
      }
      if (other.snippets_ != 0) {
        setSnippetsValue(other.getSnippetsValue());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.devtools.kythe.proto.DecorationsRequest parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.devtools.kythe.proto.DecorationsRequest) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.devtools.kythe.proto.Location location_ = null;
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.kythe.proto.Location, com.google.devtools.kythe.proto.Location.Builder, com.google.devtools.kythe.proto.LocationOrBuilder> locationBuilder_;
    /**
     * <pre>
     * The location of the file to fetch decorations for.  The ticket of location
     * must be non-empty.  It is an error in any case if location is invalid.
     * </pre>
     *
     * <code>.kythe.proto.Location location = 1;</code>
     */
    public boolean hasLocation() {
      return locationBuilder_ != null || location_ != null;
    }
    /**
     * <pre>
     * The location of the file to fetch decorations for.  The ticket of location
     * must be non-empty.  It is an error in any case if location is invalid.
     * </pre>
     *
     * <code>.kythe.proto.Location location = 1;</code>
     */
    public com.google.devtools.kythe.proto.Location getLocation() {
      if (locationBuilder_ == null) {
        return location_ == null ? com.google.devtools.kythe.proto.Location.getDefaultInstance() : location_;
      } else {
        return locationBuilder_.getMessage();
      }
    }
    /**
     * <pre>
     * The location of the file to fetch decorations for.  The ticket of location
     * must be non-empty.  It is an error in any case if location is invalid.
     * </pre>
     *
     * <code>.kythe.proto.Location location = 1;</code>
     */
    public Builder setLocation(com.google.devtools.kythe.proto.Location value) {
      if (locationBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        location_ = value;
        onChanged();
      } else {
        locationBuilder_.setMessage(value);
      }

      return this;
    }
    /**
     * <pre>
     * The location of the file to fetch decorations for.  The ticket of location
     * must be non-empty.  It is an error in any case if location is invalid.
     * </pre>
     *
     * <code>.kythe.proto.Location location = 1;</code>
     */
    public Builder setLocation(
        com.google.devtools.kythe.proto.Location.Builder builderForValue) {
      if (locationBuilder_ == null) {
        location_ = builderForValue.build();
        onChanged();
      } else {
        locationBuilder_.setMessage(builderForValue.build());
      }

      return this;
    }
    /**
     * <pre>
     * The location of the file to fetch decorations for.  The ticket of location
     * must be non-empty.  It is an error in any case if location is invalid.
     * </pre>
     *
     * <code>.kythe.proto.Location location = 1;</code>
     */
    public Builder mergeLocation(com.google.devtools.kythe.proto.Location value) {
      if (locationBuilder_ == null) {
        if (location_ != null) {
          location_ =
            com.google.devtools.kythe.proto.Location.newBuilder(location_).mergeFrom(value).buildPartial();
        } else {
          location_ = value;
        }
        onChanged();
      } else {
        locationBuilder_.mergeFrom(value);
      }

      return this;
    }
    /**
     * <pre>
     * The location of the file to fetch decorations for.  The ticket of location
     * must be non-empty.  It is an error in any case if location is invalid.
     * </pre>
     *
     * <code>.kythe.proto.Location location = 1;</code>
     */
    public Builder clearLocation() {
      if (locationBuilder_ == null) {
        location_ = null;
        onChanged();
      } else {
        location_ = null;
        locationBuilder_ = null;
      }

      return this;
    }
    /**
     * <pre>
     * The location of the file to fetch decorations for.  The ticket of location
     * must be non-empty.  It is an error in any case if location is invalid.
     * </pre>
     *
     * <code>.kythe.proto.Location location = 1;</code>
     */
    public com.google.devtools.kythe.proto.Location.Builder getLocationBuilder() {
      
      onChanged();
      return getLocationFieldBuilder().getBuilder();
    }
    /**
     * <pre>
     * The location of the file to fetch decorations for.  The ticket of location
     * must be non-empty.  It is an error in any case if location is invalid.
     * </pre>
     *
     * <code>.kythe.proto.Location location = 1;</code>
     */
    public com.google.devtools.kythe.proto.LocationOrBuilder getLocationOrBuilder() {
      if (locationBuilder_ != null) {
        return locationBuilder_.getMessageOrBuilder();
      } else {
        return location_ == null ?
            com.google.devtools.kythe.proto.Location.getDefaultInstance() : location_;
      }
    }
    /**
     * <pre>
     * The location of the file to fetch decorations for.  The ticket of location
     * must be non-empty.  It is an error in any case if location is invalid.
     * </pre>
     *
     * <code>.kythe.proto.Location location = 1;</code>
     */
    private com.google.protobuf.SingleFieldBuilderV3<
        com.google.devtools.kythe.proto.Location, com.google.devtools.kythe.proto.Location.Builder, com.google.devtools.kythe.proto.LocationOrBuilder> 
        getLocationFieldBuilder() {
      if (locationBuilder_ == null) {
        locationBuilder_ = new com.google.protobuf.SingleFieldBuilderV3<
            com.google.devtools.kythe.proto.Location, com.google.devtools.kythe.proto.Location.Builder, com.google.devtools.kythe.proto.LocationOrBuilder>(
                getLocation(),
                getParentForChildren(),
                isClean());
        location_ = null;
      }
      return locationBuilder_;
    }

    private int spanKind_ = 0;
    /**
     * <pre>
     * How to treat SPAN locations.
     * </pre>
     *
     * <code>.kythe.proto.DecorationsRequest.SpanKind span_kind = 10;</code>
     */
    public int getSpanKindValue() {
      return spanKind_;
    }
    /**
     * <pre>
     * How to treat SPAN locations.
     * </pre>
     *
     * <code>.kythe.proto.DecorationsRequest.SpanKind span_kind = 10;</code>
     */
    public Builder setSpanKindValue(int value) {
      spanKind_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How to treat SPAN locations.
     * </pre>
     *
     * <code>.kythe.proto.DecorationsRequest.SpanKind span_kind = 10;</code>
     */
    public com.google.devtools.kythe.proto.DecorationsRequest.SpanKind getSpanKind() {
      com.google.devtools.kythe.proto.DecorationsRequest.SpanKind result = com.google.devtools.kythe.proto.DecorationsRequest.SpanKind.valueOf(spanKind_);
      return result == null ? com.google.devtools.kythe.proto.DecorationsRequest.SpanKind.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * How to treat SPAN locations.
     * </pre>
     *
     * <code>.kythe.proto.DecorationsRequest.SpanKind span_kind = 10;</code>
     */
    public Builder setSpanKind(com.google.devtools.kythe.proto.DecorationsRequest.SpanKind value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      spanKind_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * How to treat SPAN locations.
     * </pre>
     *
     * <code>.kythe.proto.DecorationsRequest.SpanKind span_kind = 10;</code>
     */
    public Builder clearSpanKind() {
      
      spanKind_ = 0;
      onChanged();
      return this;
    }

    private com.google.protobuf.ByteString dirtyBuffer_ = com.google.protobuf.ByteString.EMPTY;
    /**
     * <pre>
     * If dirty_buffer is non-empty, the results will be adjusted (patched) to
     * account for the regions of the specified file differing from the contents
     * of the dirty buffer.
     * </pre>
     *
     * <code>bytes dirty_buffer = 2;</code>
     */
    public com.google.protobuf.ByteString getDirtyBuffer() {
      return dirtyBuffer_;
    }
    /**
     * <pre>
     * If dirty_buffer is non-empty, the results will be adjusted (patched) to
     * account for the regions of the specified file differing from the contents
     * of the dirty buffer.
     * </pre>
     *
     * <code>bytes dirty_buffer = 2;</code>
     */
    public Builder setDirtyBuffer(com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  
      dirtyBuffer_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If dirty_buffer is non-empty, the results will be adjusted (patched) to
     * account for the regions of the specified file differing from the contents
     * of the dirty buffer.
     * </pre>
     *
     * <code>bytes dirty_buffer = 2;</code>
     */
    public Builder clearDirtyBuffer() {
      
      dirtyBuffer_ = getDefaultInstance().getDirtyBuffer();
      onChanged();
      return this;
    }

    private boolean sourceText_ ;
    /**
     * <pre>
     * If true, return the encoded source text for the selected window.  Source
     * text is not affected by patching.
     * </pre>
     *
     * <code>bool source_text = 3;</code>
     */
    public boolean getSourceText() {
      return sourceText_;
    }
    /**
     * <pre>
     * If true, return the encoded source text for the selected window.  Source
     * text is not affected by patching.
     * </pre>
     *
     * <code>bool source_text = 3;</code>
     */
    public Builder setSourceText(boolean value) {
      
      sourceText_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true, return the encoded source text for the selected window.  Source
     * text is not affected by patching.
     * </pre>
     *
     * <code>bool source_text = 3;</code>
     */
    public Builder clearSourceText() {
      
      sourceText_ = false;
      onChanged();
      return this;
    }

    private boolean references_ ;
    /**
     * <pre>
     * If true, return reference edges whose source nodes are located in the
     * selected window.  References are affected by patching.
     * </pre>
     *
     * <code>bool references = 4;</code>
     */
    public boolean getReferences() {
      return references_;
    }
    /**
     * <pre>
     * If true, return reference edges whose source nodes are located in the
     * selected window.  References are affected by patching.
     * </pre>
     *
     * <code>bool references = 4;</code>
     */
    public Builder setReferences(boolean value) {
      
      references_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true, return reference edges whose source nodes are located in the
     * selected window.  References are affected by patching.
     * </pre>
     *
     * <code>bool references = 4;</code>
     */
    public Builder clearReferences() {
      
      references_ = false;
      onChanged();
      return this;
    }

    private boolean targetDefinitions_ ;
    /**
     * <pre>
     * If true, return definition locations, if possible, for each returned
     * reference target in the DecorationsReply.
     * </pre>
     *
     * <code>bool target_definitions = 6;</code>
     */
    public boolean getTargetDefinitions() {
      return targetDefinitions_;
    }
    /**
     * <pre>
     * If true, return definition locations, if possible, for each returned
     * reference target in the DecorationsReply.
     * </pre>
     *
     * <code>bool target_definitions = 6;</code>
     */
    public Builder setTargetDefinitions(boolean value) {
      
      targetDefinitions_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true, return definition locations, if possible, for each returned
     * reference target in the DecorationsReply.
     * </pre>
     *
     * <code>bool target_definitions = 6;</code>
     */
    public Builder clearTargetDefinitions() {
      
      targetDefinitions_ = false;
      onChanged();
      return this;
    }

    private com.google.protobuf.LazyStringList filter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureFilterIsMutable() {
      if (!((bitField0_ & 0x00000040) == 0x00000040)) {
        filter_ = new com.google.protobuf.LazyStringArrayList(filter_);
        bitField0_ |= 0x00000040;
       }
    }
    /**
     * <pre>
     * A collection of filter globs that specify which facts (by name) should be
     * returned for each node.  If filter is empty or unset, no node facts are
     * returned.  The filter applies to ALL referenced nodes.  See EdgesRequest
     * (graph.proto) for the format of the filter globs.
     * </pre>
     *
     * <code>repeated string filter = 5;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getFilterList() {
      return filter_.getUnmodifiableView();
    }
    /**
     * <pre>
     * A collection of filter globs that specify which facts (by name) should be
     * returned for each node.  If filter is empty or unset, no node facts are
     * returned.  The filter applies to ALL referenced nodes.  See EdgesRequest
     * (graph.proto) for the format of the filter globs.
     * </pre>
     *
     * <code>repeated string filter = 5;</code>
     */
    public int getFilterCount() {
      return filter_.size();
    }
    /**
     * <pre>
     * A collection of filter globs that specify which facts (by name) should be
     * returned for each node.  If filter is empty or unset, no node facts are
     * returned.  The filter applies to ALL referenced nodes.  See EdgesRequest
     * (graph.proto) for the format of the filter globs.
     * </pre>
     *
     * <code>repeated string filter = 5;</code>
     */
    public java.lang.String getFilter(int index) {
      return filter_.get(index);
    }
    /**
     * <pre>
     * A collection of filter globs that specify which facts (by name) should be
     * returned for each node.  If filter is empty or unset, no node facts are
     * returned.  The filter applies to ALL referenced nodes.  See EdgesRequest
     * (graph.proto) for the format of the filter globs.
     * </pre>
     *
     * <code>repeated string filter = 5;</code>
     */
    public com.google.protobuf.ByteString
        getFilterBytes(int index) {
      return filter_.getByteString(index);
    }
    /**
     * <pre>
     * A collection of filter globs that specify which facts (by name) should be
     * returned for each node.  If filter is empty or unset, no node facts are
     * returned.  The filter applies to ALL referenced nodes.  See EdgesRequest
     * (graph.proto) for the format of the filter globs.
     * </pre>
     *
     * <code>repeated string filter = 5;</code>
     */
    public Builder setFilter(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureFilterIsMutable();
      filter_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A collection of filter globs that specify which facts (by name) should be
     * returned for each node.  If filter is empty or unset, no node facts are
     * returned.  The filter applies to ALL referenced nodes.  See EdgesRequest
     * (graph.proto) for the format of the filter globs.
     * </pre>
     *
     * <code>repeated string filter = 5;</code>
     */
    public Builder addFilter(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureFilterIsMutable();
      filter_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A collection of filter globs that specify which facts (by name) should be
     * returned for each node.  If filter is empty or unset, no node facts are
     * returned.  The filter applies to ALL referenced nodes.  See EdgesRequest
     * (graph.proto) for the format of the filter globs.
     * </pre>
     *
     * <code>repeated string filter = 5;</code>
     */
    public Builder addAllFilter(
        java.lang.Iterable<java.lang.String> values) {
      ensureFilterIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, filter_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A collection of filter globs that specify which facts (by name) should be
     * returned for each node.  If filter is empty or unset, no node facts are
     * returned.  The filter applies to ALL referenced nodes.  See EdgesRequest
     * (graph.proto) for the format of the filter globs.
     * </pre>
     *
     * <code>repeated string filter = 5;</code>
     */
    public Builder clearFilter() {
      filter_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000040);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * A collection of filter globs that specify which facts (by name) should be
     * returned for each node.  If filter is empty or unset, no node facts are
     * returned.  The filter applies to ALL referenced nodes.  See EdgesRequest
     * (graph.proto) for the format of the filter globs.
     * </pre>
     *
     * <code>repeated string filter = 5;</code>
     */
    public Builder addFilterBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureFilterIsMutable();
      filter_.add(value);
      onChanged();
      return this;
    }

    private boolean extendsOverrides_ ;
    /**
     * <pre>
     * If true, for every defines/binding Reference in the reply, a NodeInfo
     * will be provided for each node that Reference extends or overrides.
     * Furthermore, if definition_locations is true, the response's
     * definition_locations field will include (where possible) the locations of
     * the definitions of the nodes that are extended or overridden.
     * </pre>
     *
     * <code>bool extends_overrides = 7;</code>
     */
    public boolean getExtendsOverrides() {
      return extendsOverrides_;
    }
    /**
     * <pre>
     * If true, for every defines/binding Reference in the reply, a NodeInfo
     * will be provided for each node that Reference extends or overrides.
     * Furthermore, if definition_locations is true, the response's
     * definition_locations field will include (where possible) the locations of
     * the definitions of the nodes that are extended or overridden.
     * </pre>
     *
     * <code>bool extends_overrides = 7;</code>
     */
    public Builder setExtendsOverrides(boolean value) {
      
      extendsOverrides_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true, for every defines/binding Reference in the reply, a NodeInfo
     * will be provided for each node that Reference extends or overrides.
     * Furthermore, if definition_locations is true, the response's
     * definition_locations field will include (where possible) the locations of
     * the definitions of the nodes that are extended or overridden.
     * </pre>
     *
     * <code>bool extends_overrides = 7;</code>
     */
    public Builder clearExtendsOverrides() {
      
      extendsOverrides_ = false;
      onChanged();
      return this;
    }

    private boolean diagnostics_ ;
    /**
     * <pre>
     * If true, return diagnostics for the given file.
     * </pre>
     *
     * <code>bool diagnostics = 8;</code>
     */
    public boolean getDiagnostics() {
      return diagnostics_;
    }
    /**
     * <pre>
     * If true, return diagnostics for the given file.
     * </pre>
     *
     * <code>bool diagnostics = 8;</code>
     */
    public Builder setDiagnostics(boolean value) {
      
      diagnostics_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * If true, return diagnostics for the given file.
     * </pre>
     *
     * <code>bool diagnostics = 8;</code>
     */
    public Builder clearDiagnostics() {
      
      diagnostics_ = false;
      onChanged();
      return this;
    }

    private int snippets_ = 0;
    /**
     * <pre>
     * What kind of snippets to return (or none).
     * </pre>
     *
     * <code>.kythe.proto.SnippetsKind snippets = 9;</code>
     */
    public int getSnippetsValue() {
      return snippets_;
    }
    /**
     * <pre>
     * What kind of snippets to return (or none).
     * </pre>
     *
     * <code>.kythe.proto.SnippetsKind snippets = 9;</code>
     */
    public Builder setSnippetsValue(int value) {
      snippets_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * What kind of snippets to return (or none).
     * </pre>
     *
     * <code>.kythe.proto.SnippetsKind snippets = 9;</code>
     */
    public com.google.devtools.kythe.proto.SnippetsKind getSnippets() {
      com.google.devtools.kythe.proto.SnippetsKind result = com.google.devtools.kythe.proto.SnippetsKind.valueOf(snippets_);
      return result == null ? com.google.devtools.kythe.proto.SnippetsKind.UNRECOGNIZED : result;
    }
    /**
     * <pre>
     * What kind of snippets to return (or none).
     * </pre>
     *
     * <code>.kythe.proto.SnippetsKind snippets = 9;</code>
     */
    public Builder setSnippets(com.google.devtools.kythe.proto.SnippetsKind value) {
      if (value == null) {
        throw new NullPointerException();
      }
      
      snippets_ = value.getNumber();
      onChanged();
      return this;
    }
    /**
     * <pre>
     * What kind of snippets to return (or none).
     * </pre>
     *
     * <code>.kythe.proto.SnippetsKind snippets = 9;</code>
     */
    public Builder clearSnippets() {
      
      snippets_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:kythe.proto.DecorationsRequest)
  }

  // @@protoc_insertion_point(class_scope:kythe.proto.DecorationsRequest)
  private static final com.google.devtools.kythe.proto.DecorationsRequest DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.kythe.proto.DecorationsRequest();
  }

  public static com.google.devtools.kythe.proto.DecorationsRequest getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<DecorationsRequest>
      PARSER = new com.google.protobuf.AbstractParser<DecorationsRequest>() {
    public DecorationsRequest parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new DecorationsRequest(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<DecorationsRequest> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<DecorationsRequest> getParserForType() {
    return PARSER;
  }

  public com.google.devtools.kythe.proto.DecorationsRequest getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

