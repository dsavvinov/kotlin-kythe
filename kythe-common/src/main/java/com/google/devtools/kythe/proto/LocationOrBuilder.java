// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kythe/proto/xref.proto

package com.google.devtools.kythe.proto;

public interface LocationOrBuilder extends
    // @@protoc_insertion_point(interface_extends:kythe.proto.Location)
    com.google.protobuf.MessageOrBuilder {

  /**
   * <pre>
   * The ticket of the file this location belongs to.  If the location
   * represents a memory buffer, the ticket should be omitted.
   * </pre>
   *
   * <code>string ticket = 1;</code>
   */
  java.lang.String getTicket();
  /**
   * <pre>
   * The ticket of the file this location belongs to.  If the location
   * represents a memory buffer, the ticket should be omitted.
   * </pre>
   *
   * <code>string ticket = 1;</code>
   */
  com.google.protobuf.ByteString
      getTicketBytes();

  /**
   * <pre>
   * What kind of location this is.
   * </pre>
   *
   * <code>.kythe.proto.Location.Kind kind = 2;</code>
   */
  int getKindValue();
  /**
   * <pre>
   * What kind of location this is.
   * </pre>
   *
   * <code>.kythe.proto.Location.Kind kind = 2;</code>
   */
  com.google.devtools.kythe.proto.Location.Kind getKind();

  /**
   * <pre>
   * If kind == SPAN, this is the represented span within the file.
   * </pre>
   *
   * <code>.kythe.proto.common.Span span = 5;</code>
   */
  boolean hasSpan();
  /**
   * <pre>
   * If kind == SPAN, this is the represented span within the file.
   * </pre>
   *
   * <code>.kythe.proto.common.Span span = 5;</code>
   */
  com.google.devtools.kythe.proto.Span getSpan();
  /**
   * <pre>
   * If kind == SPAN, this is the represented span within the file.
   * </pre>
   *
   * <code>.kythe.proto.common.Span span = 5;</code>
   */
  com.google.devtools.kythe.proto.SpanOrBuilder getSpanOrBuilder();
}
