// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kythe/proto/explore.proto

package com.google.devtools.kythe.proto;

/**
 * <pre>
 * Imposes restrictions on the nodes returned for a query.
 * An unset NodeFilter is interpreted as "no restrictions on nodes returned".
 * </pre>
 *
 * Protobuf type {@code kythe.proto.NodeFilter}
 */
public  final class NodeFilter extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:kythe.proto.NodeFilter)
    NodeFilterOrBuilder {
private static final long serialVersionUID = 0L;
  // Use NodeFilter.newBuilder() to construct.
  private NodeFilter(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private NodeFilter() {
    includedLanguages_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    includedFiles_ = java.util.Collections.emptyList();
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private NodeFilter(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 10: {
            java.lang.String s = input.readStringRequireUtf8();
            if (!((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
              includedLanguages_ = new com.google.protobuf.LazyStringArrayList();
              mutable_bitField0_ |= 0x00000001;
            }
            includedLanguages_.add(s);
            break;
          }
          case 18: {
            if (!((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
              includedFiles_ = new java.util.ArrayList<com.google.devtools.kythe.proto.Storage.VName>();
              mutable_bitField0_ |= 0x00000002;
            }
            includedFiles_.add(
                input.readMessage(com.google.devtools.kythe.proto.Storage.VName.parser(), extensionRegistry));
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      if (((mutable_bitField0_ & 0x00000001) == 0x00000001)) {
        includedLanguages_ = includedLanguages_.getUnmodifiableView();
      }
      if (((mutable_bitField0_ & 0x00000002) == 0x00000002)) {
        includedFiles_ = java.util.Collections.unmodifiableList(includedFiles_);
      }
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.kythe.proto.Explore.internal_static_kythe_proto_NodeFilter_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.kythe.proto.Explore.internal_static_kythe_proto_NodeFilter_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.kythe.proto.NodeFilter.class, com.google.devtools.kythe.proto.NodeFilter.Builder.class);
  }

  public static final int INCLUDED_LANGUAGES_FIELD_NUMBER = 1;
  private com.google.protobuf.LazyStringList includedLanguages_;
  /**
   * <pre>
   * if set, only return nodes whose languages match any of these strings
   * TODO: consider enabling VName-based filtering for nodes as well as files
   * </pre>
   *
   * <code>repeated string included_languages = 1;</code>
   */
  public com.google.protobuf.ProtocolStringList
      getIncludedLanguagesList() {
    return includedLanguages_;
  }
  /**
   * <pre>
   * if set, only return nodes whose languages match any of these strings
   * TODO: consider enabling VName-based filtering for nodes as well as files
   * </pre>
   *
   * <code>repeated string included_languages = 1;</code>
   */
  public int getIncludedLanguagesCount() {
    return includedLanguages_.size();
  }
  /**
   * <pre>
   * if set, only return nodes whose languages match any of these strings
   * TODO: consider enabling VName-based filtering for nodes as well as files
   * </pre>
   *
   * <code>repeated string included_languages = 1;</code>
   */
  public java.lang.String getIncludedLanguages(int index) {
    return includedLanguages_.get(index);
  }
  /**
   * <pre>
   * if set, only return nodes whose languages match any of these strings
   * TODO: consider enabling VName-based filtering for nodes as well as files
   * </pre>
   *
   * <code>repeated string included_languages = 1;</code>
   */
  public com.google.protobuf.ByteString
      getIncludedLanguagesBytes(int index) {
    return includedLanguages_.getByteString(index);
  }

  public static final int INCLUDED_FILES_FIELD_NUMBER = 2;
  private java.util.List<com.google.devtools.kythe.proto.Storage.VName> includedFiles_;
  /**
   * <pre>
   * if set, only return nodes whose files match any of these VNames
   * Only the parts of the VName that relate to files are relevant here:
   * https://kythe.io/docs/schema/#_vname_conventions
   * TODO: consider also supplying exclusion specs as well as inclusion
   * </pre>
   *
   * <code>repeated .kythe.proto.VName included_files = 2;</code>
   */
  public java.util.List<com.google.devtools.kythe.proto.Storage.VName> getIncludedFilesList() {
    return includedFiles_;
  }
  /**
   * <pre>
   * if set, only return nodes whose files match any of these VNames
   * Only the parts of the VName that relate to files are relevant here:
   * https://kythe.io/docs/schema/#_vname_conventions
   * TODO: consider also supplying exclusion specs as well as inclusion
   * </pre>
   *
   * <code>repeated .kythe.proto.VName included_files = 2;</code>
   */
  public java.util.List<? extends com.google.devtools.kythe.proto.Storage.VNameOrBuilder> 
      getIncludedFilesOrBuilderList() {
    return includedFiles_;
  }
  /**
   * <pre>
   * if set, only return nodes whose files match any of these VNames
   * Only the parts of the VName that relate to files are relevant here:
   * https://kythe.io/docs/schema/#_vname_conventions
   * TODO: consider also supplying exclusion specs as well as inclusion
   * </pre>
   *
   * <code>repeated .kythe.proto.VName included_files = 2;</code>
   */
  public int getIncludedFilesCount() {
    return includedFiles_.size();
  }
  /**
   * <pre>
   * if set, only return nodes whose files match any of these VNames
   * Only the parts of the VName that relate to files are relevant here:
   * https://kythe.io/docs/schema/#_vname_conventions
   * TODO: consider also supplying exclusion specs as well as inclusion
   * </pre>
   *
   * <code>repeated .kythe.proto.VName included_files = 2;</code>
   */
  public com.google.devtools.kythe.proto.Storage.VName getIncludedFiles(int index) {
    return includedFiles_.get(index);
  }
  /**
   * <pre>
   * if set, only return nodes whose files match any of these VNames
   * Only the parts of the VName that relate to files are relevant here:
   * https://kythe.io/docs/schema/#_vname_conventions
   * TODO: consider also supplying exclusion specs as well as inclusion
   * </pre>
   *
   * <code>repeated .kythe.proto.VName included_files = 2;</code>
   */
  public com.google.devtools.kythe.proto.Storage.VNameOrBuilder getIncludedFilesOrBuilder(
      int index) {
    return includedFiles_.get(index);
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    for (int i = 0; i < includedLanguages_.size(); i++) {
      com.google.protobuf.GeneratedMessageV3.writeString(output, 1, includedLanguages_.getRaw(i));
    }
    for (int i = 0; i < includedFiles_.size(); i++) {
      output.writeMessage(2, includedFiles_.get(i));
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    {
      int dataSize = 0;
      for (int i = 0; i < includedLanguages_.size(); i++) {
        dataSize += computeStringSizeNoTag(includedLanguages_.getRaw(i));
      }
      size += dataSize;
      size += 1 * getIncludedLanguagesList().size();
    }
    for (int i = 0; i < includedFiles_.size(); i++) {
      size += com.google.protobuf.CodedOutputStream
        .computeMessageSize(2, includedFiles_.get(i));
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.kythe.proto.NodeFilter)) {
      return super.equals(obj);
    }
    com.google.devtools.kythe.proto.NodeFilter other = (com.google.devtools.kythe.proto.NodeFilter) obj;

    boolean result = true;
    result = result && getIncludedLanguagesList()
        .equals(other.getIncludedLanguagesList());
    result = result && getIncludedFilesList()
        .equals(other.getIncludedFilesList());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    if (getIncludedLanguagesCount() > 0) {
      hash = (37 * hash) + INCLUDED_LANGUAGES_FIELD_NUMBER;
      hash = (53 * hash) + getIncludedLanguagesList().hashCode();
    }
    if (getIncludedFilesCount() > 0) {
      hash = (37 * hash) + INCLUDED_FILES_FIELD_NUMBER;
      hash = (53 * hash) + getIncludedFilesList().hashCode();
    }
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.kythe.proto.NodeFilter parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.kythe.proto.NodeFilter parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.NodeFilter parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.kythe.proto.NodeFilter parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.NodeFilter parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.kythe.proto.NodeFilter parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.NodeFilter parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.kythe.proto.NodeFilter parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.NodeFilter parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.kythe.proto.NodeFilter parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.NodeFilter parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.kythe.proto.NodeFilter parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.kythe.proto.NodeFilter prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * Imposes restrictions on the nodes returned for a query.
   * An unset NodeFilter is interpreted as "no restrictions on nodes returned".
   * </pre>
   *
   * Protobuf type {@code kythe.proto.NodeFilter}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:kythe.proto.NodeFilter)
      com.google.devtools.kythe.proto.NodeFilterOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.kythe.proto.Explore.internal_static_kythe_proto_NodeFilter_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.kythe.proto.Explore.internal_static_kythe_proto_NodeFilter_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.kythe.proto.NodeFilter.class, com.google.devtools.kythe.proto.NodeFilter.Builder.class);
    }

    // Construct using com.google.devtools.kythe.proto.NodeFilter.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
        getIncludedFilesFieldBuilder();
      }
    }
    public Builder clear() {
      super.clear();
      includedLanguages_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      if (includedFilesBuilder_ == null) {
        includedFiles_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
      } else {
        includedFilesBuilder_.clear();
      }
      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.kythe.proto.Explore.internal_static_kythe_proto_NodeFilter_descriptor;
    }

    public com.google.devtools.kythe.proto.NodeFilter getDefaultInstanceForType() {
      return com.google.devtools.kythe.proto.NodeFilter.getDefaultInstance();
    }

    public com.google.devtools.kythe.proto.NodeFilter build() {
      com.google.devtools.kythe.proto.NodeFilter result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.devtools.kythe.proto.NodeFilter buildPartial() {
      com.google.devtools.kythe.proto.NodeFilter result = new com.google.devtools.kythe.proto.NodeFilter(this);
      int from_bitField0_ = bitField0_;
      if (((bitField0_ & 0x00000001) == 0x00000001)) {
        includedLanguages_ = includedLanguages_.getUnmodifiableView();
        bitField0_ = (bitField0_ & ~0x00000001);
      }
      result.includedLanguages_ = includedLanguages_;
      if (includedFilesBuilder_ == null) {
        if (((bitField0_ & 0x00000002) == 0x00000002)) {
          includedFiles_ = java.util.Collections.unmodifiableList(includedFiles_);
          bitField0_ = (bitField0_ & ~0x00000002);
        }
        result.includedFiles_ = includedFiles_;
      } else {
        result.includedFiles_ = includedFilesBuilder_.build();
      }
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.kythe.proto.NodeFilter) {
        return mergeFrom((com.google.devtools.kythe.proto.NodeFilter)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.kythe.proto.NodeFilter other) {
      if (other == com.google.devtools.kythe.proto.NodeFilter.getDefaultInstance()) return this;
      if (!other.includedLanguages_.isEmpty()) {
        if (includedLanguages_.isEmpty()) {
          includedLanguages_ = other.includedLanguages_;
          bitField0_ = (bitField0_ & ~0x00000001);
        } else {
          ensureIncludedLanguagesIsMutable();
          includedLanguages_.addAll(other.includedLanguages_);
        }
        onChanged();
      }
      if (includedFilesBuilder_ == null) {
        if (!other.includedFiles_.isEmpty()) {
          if (includedFiles_.isEmpty()) {
            includedFiles_ = other.includedFiles_;
            bitField0_ = (bitField0_ & ~0x00000002);
          } else {
            ensureIncludedFilesIsMutable();
            includedFiles_.addAll(other.includedFiles_);
          }
          onChanged();
        }
      } else {
        if (!other.includedFiles_.isEmpty()) {
          if (includedFilesBuilder_.isEmpty()) {
            includedFilesBuilder_.dispose();
            includedFilesBuilder_ = null;
            includedFiles_ = other.includedFiles_;
            bitField0_ = (bitField0_ & ~0x00000002);
            includedFilesBuilder_ = 
              com.google.protobuf.GeneratedMessageV3.alwaysUseFieldBuilders ?
                 getIncludedFilesFieldBuilder() : null;
          } else {
            includedFilesBuilder_.addAllMessages(other.includedFiles_);
          }
        }
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.devtools.kythe.proto.NodeFilter parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.devtools.kythe.proto.NodeFilter) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }
    private int bitField0_;

    private com.google.protobuf.LazyStringList includedLanguages_ = com.google.protobuf.LazyStringArrayList.EMPTY;
    private void ensureIncludedLanguagesIsMutable() {
      if (!((bitField0_ & 0x00000001) == 0x00000001)) {
        includedLanguages_ = new com.google.protobuf.LazyStringArrayList(includedLanguages_);
        bitField0_ |= 0x00000001;
       }
    }
    /**
     * <pre>
     * if set, only return nodes whose languages match any of these strings
     * TODO: consider enabling VName-based filtering for nodes as well as files
     * </pre>
     *
     * <code>repeated string included_languages = 1;</code>
     */
    public com.google.protobuf.ProtocolStringList
        getIncludedLanguagesList() {
      return includedLanguages_.getUnmodifiableView();
    }
    /**
     * <pre>
     * if set, only return nodes whose languages match any of these strings
     * TODO: consider enabling VName-based filtering for nodes as well as files
     * </pre>
     *
     * <code>repeated string included_languages = 1;</code>
     */
    public int getIncludedLanguagesCount() {
      return includedLanguages_.size();
    }
    /**
     * <pre>
     * if set, only return nodes whose languages match any of these strings
     * TODO: consider enabling VName-based filtering for nodes as well as files
     * </pre>
     *
     * <code>repeated string included_languages = 1;</code>
     */
    public java.lang.String getIncludedLanguages(int index) {
      return includedLanguages_.get(index);
    }
    /**
     * <pre>
     * if set, only return nodes whose languages match any of these strings
     * TODO: consider enabling VName-based filtering for nodes as well as files
     * </pre>
     *
     * <code>repeated string included_languages = 1;</code>
     */
    public com.google.protobuf.ByteString
        getIncludedLanguagesBytes(int index) {
      return includedLanguages_.getByteString(index);
    }
    /**
     * <pre>
     * if set, only return nodes whose languages match any of these strings
     * TODO: consider enabling VName-based filtering for nodes as well as files
     * </pre>
     *
     * <code>repeated string included_languages = 1;</code>
     */
    public Builder setIncludedLanguages(
        int index, java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureIncludedLanguagesIsMutable();
      includedLanguages_.set(index, value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * if set, only return nodes whose languages match any of these strings
     * TODO: consider enabling VName-based filtering for nodes as well as files
     * </pre>
     *
     * <code>repeated string included_languages = 1;</code>
     */
    public Builder addIncludedLanguages(
        java.lang.String value) {
      if (value == null) {
    throw new NullPointerException();
  }
  ensureIncludedLanguagesIsMutable();
      includedLanguages_.add(value);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * if set, only return nodes whose languages match any of these strings
     * TODO: consider enabling VName-based filtering for nodes as well as files
     * </pre>
     *
     * <code>repeated string included_languages = 1;</code>
     */
    public Builder addAllIncludedLanguages(
        java.lang.Iterable<java.lang.String> values) {
      ensureIncludedLanguagesIsMutable();
      com.google.protobuf.AbstractMessageLite.Builder.addAll(
          values, includedLanguages_);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * if set, only return nodes whose languages match any of these strings
     * TODO: consider enabling VName-based filtering for nodes as well as files
     * </pre>
     *
     * <code>repeated string included_languages = 1;</code>
     */
    public Builder clearIncludedLanguages() {
      includedLanguages_ = com.google.protobuf.LazyStringArrayList.EMPTY;
      bitField0_ = (bitField0_ & ~0x00000001);
      onChanged();
      return this;
    }
    /**
     * <pre>
     * if set, only return nodes whose languages match any of these strings
     * TODO: consider enabling VName-based filtering for nodes as well as files
     * </pre>
     *
     * <code>repeated string included_languages = 1;</code>
     */
    public Builder addIncludedLanguagesBytes(
        com.google.protobuf.ByteString value) {
      if (value == null) {
    throw new NullPointerException();
  }
  checkByteStringIsUtf8(value);
      ensureIncludedLanguagesIsMutable();
      includedLanguages_.add(value);
      onChanged();
      return this;
    }

    private java.util.List<com.google.devtools.kythe.proto.Storage.VName> includedFiles_ =
      java.util.Collections.emptyList();
    private void ensureIncludedFilesIsMutable() {
      if (!((bitField0_ & 0x00000002) == 0x00000002)) {
        includedFiles_ = new java.util.ArrayList<com.google.devtools.kythe.proto.Storage.VName>(includedFiles_);
        bitField0_ |= 0x00000002;
       }
    }

    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.kythe.proto.Storage.VName, com.google.devtools.kythe.proto.Storage.VName.Builder, com.google.devtools.kythe.proto.Storage.VNameOrBuilder> includedFilesBuilder_;

    /**
     * <pre>
     * if set, only return nodes whose files match any of these VNames
     * Only the parts of the VName that relate to files are relevant here:
     * https://kythe.io/docs/schema/#_vname_conventions
     * TODO: consider also supplying exclusion specs as well as inclusion
     * </pre>
     *
     * <code>repeated .kythe.proto.VName included_files = 2;</code>
     */
    public java.util.List<com.google.devtools.kythe.proto.Storage.VName> getIncludedFilesList() {
      if (includedFilesBuilder_ == null) {
        return java.util.Collections.unmodifiableList(includedFiles_);
      } else {
        return includedFilesBuilder_.getMessageList();
      }
    }
    /**
     * <pre>
     * if set, only return nodes whose files match any of these VNames
     * Only the parts of the VName that relate to files are relevant here:
     * https://kythe.io/docs/schema/#_vname_conventions
     * TODO: consider also supplying exclusion specs as well as inclusion
     * </pre>
     *
     * <code>repeated .kythe.proto.VName included_files = 2;</code>
     */
    public int getIncludedFilesCount() {
      if (includedFilesBuilder_ == null) {
        return includedFiles_.size();
      } else {
        return includedFilesBuilder_.getCount();
      }
    }
    /**
     * <pre>
     * if set, only return nodes whose files match any of these VNames
     * Only the parts of the VName that relate to files are relevant here:
     * https://kythe.io/docs/schema/#_vname_conventions
     * TODO: consider also supplying exclusion specs as well as inclusion
     * </pre>
     *
     * <code>repeated .kythe.proto.VName included_files = 2;</code>
     */
    public com.google.devtools.kythe.proto.Storage.VName getIncludedFiles(int index) {
      if (includedFilesBuilder_ == null) {
        return includedFiles_.get(index);
      } else {
        return includedFilesBuilder_.getMessage(index);
      }
    }
    /**
     * <pre>
     * if set, only return nodes whose files match any of these VNames
     * Only the parts of the VName that relate to files are relevant here:
     * https://kythe.io/docs/schema/#_vname_conventions
     * TODO: consider also supplying exclusion specs as well as inclusion
     * </pre>
     *
     * <code>repeated .kythe.proto.VName included_files = 2;</code>
     */
    public Builder setIncludedFiles(
        int index, com.google.devtools.kythe.proto.Storage.VName value) {
      if (includedFilesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIncludedFilesIsMutable();
        includedFiles_.set(index, value);
        onChanged();
      } else {
        includedFilesBuilder_.setMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * if set, only return nodes whose files match any of these VNames
     * Only the parts of the VName that relate to files are relevant here:
     * https://kythe.io/docs/schema/#_vname_conventions
     * TODO: consider also supplying exclusion specs as well as inclusion
     * </pre>
     *
     * <code>repeated .kythe.proto.VName included_files = 2;</code>
     */
    public Builder setIncludedFiles(
        int index, com.google.devtools.kythe.proto.Storage.VName.Builder builderForValue) {
      if (includedFilesBuilder_ == null) {
        ensureIncludedFilesIsMutable();
        includedFiles_.set(index, builderForValue.build());
        onChanged();
      } else {
        includedFilesBuilder_.setMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * if set, only return nodes whose files match any of these VNames
     * Only the parts of the VName that relate to files are relevant here:
     * https://kythe.io/docs/schema/#_vname_conventions
     * TODO: consider also supplying exclusion specs as well as inclusion
     * </pre>
     *
     * <code>repeated .kythe.proto.VName included_files = 2;</code>
     */
    public Builder addIncludedFiles(com.google.devtools.kythe.proto.Storage.VName value) {
      if (includedFilesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIncludedFilesIsMutable();
        includedFiles_.add(value);
        onChanged();
      } else {
        includedFilesBuilder_.addMessage(value);
      }
      return this;
    }
    /**
     * <pre>
     * if set, only return nodes whose files match any of these VNames
     * Only the parts of the VName that relate to files are relevant here:
     * https://kythe.io/docs/schema/#_vname_conventions
     * TODO: consider also supplying exclusion specs as well as inclusion
     * </pre>
     *
     * <code>repeated .kythe.proto.VName included_files = 2;</code>
     */
    public Builder addIncludedFiles(
        int index, com.google.devtools.kythe.proto.Storage.VName value) {
      if (includedFilesBuilder_ == null) {
        if (value == null) {
          throw new NullPointerException();
        }
        ensureIncludedFilesIsMutable();
        includedFiles_.add(index, value);
        onChanged();
      } else {
        includedFilesBuilder_.addMessage(index, value);
      }
      return this;
    }
    /**
     * <pre>
     * if set, only return nodes whose files match any of these VNames
     * Only the parts of the VName that relate to files are relevant here:
     * https://kythe.io/docs/schema/#_vname_conventions
     * TODO: consider also supplying exclusion specs as well as inclusion
     * </pre>
     *
     * <code>repeated .kythe.proto.VName included_files = 2;</code>
     */
    public Builder addIncludedFiles(
        com.google.devtools.kythe.proto.Storage.VName.Builder builderForValue) {
      if (includedFilesBuilder_ == null) {
        ensureIncludedFilesIsMutable();
        includedFiles_.add(builderForValue.build());
        onChanged();
      } else {
        includedFilesBuilder_.addMessage(builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * if set, only return nodes whose files match any of these VNames
     * Only the parts of the VName that relate to files are relevant here:
     * https://kythe.io/docs/schema/#_vname_conventions
     * TODO: consider also supplying exclusion specs as well as inclusion
     * </pre>
     *
     * <code>repeated .kythe.proto.VName included_files = 2;</code>
     */
    public Builder addIncludedFiles(
        int index, com.google.devtools.kythe.proto.Storage.VName.Builder builderForValue) {
      if (includedFilesBuilder_ == null) {
        ensureIncludedFilesIsMutable();
        includedFiles_.add(index, builderForValue.build());
        onChanged();
      } else {
        includedFilesBuilder_.addMessage(index, builderForValue.build());
      }
      return this;
    }
    /**
     * <pre>
     * if set, only return nodes whose files match any of these VNames
     * Only the parts of the VName that relate to files are relevant here:
     * https://kythe.io/docs/schema/#_vname_conventions
     * TODO: consider also supplying exclusion specs as well as inclusion
     * </pre>
     *
     * <code>repeated .kythe.proto.VName included_files = 2;</code>
     */
    public Builder addAllIncludedFiles(
        java.lang.Iterable<? extends com.google.devtools.kythe.proto.Storage.VName> values) {
      if (includedFilesBuilder_ == null) {
        ensureIncludedFilesIsMutable();
        com.google.protobuf.AbstractMessageLite.Builder.addAll(
            values, includedFiles_);
        onChanged();
      } else {
        includedFilesBuilder_.addAllMessages(values);
      }
      return this;
    }
    /**
     * <pre>
     * if set, only return nodes whose files match any of these VNames
     * Only the parts of the VName that relate to files are relevant here:
     * https://kythe.io/docs/schema/#_vname_conventions
     * TODO: consider also supplying exclusion specs as well as inclusion
     * </pre>
     *
     * <code>repeated .kythe.proto.VName included_files = 2;</code>
     */
    public Builder clearIncludedFiles() {
      if (includedFilesBuilder_ == null) {
        includedFiles_ = java.util.Collections.emptyList();
        bitField0_ = (bitField0_ & ~0x00000002);
        onChanged();
      } else {
        includedFilesBuilder_.clear();
      }
      return this;
    }
    /**
     * <pre>
     * if set, only return nodes whose files match any of these VNames
     * Only the parts of the VName that relate to files are relevant here:
     * https://kythe.io/docs/schema/#_vname_conventions
     * TODO: consider also supplying exclusion specs as well as inclusion
     * </pre>
     *
     * <code>repeated .kythe.proto.VName included_files = 2;</code>
     */
    public Builder removeIncludedFiles(int index) {
      if (includedFilesBuilder_ == null) {
        ensureIncludedFilesIsMutable();
        includedFiles_.remove(index);
        onChanged();
      } else {
        includedFilesBuilder_.remove(index);
      }
      return this;
    }
    /**
     * <pre>
     * if set, only return nodes whose files match any of these VNames
     * Only the parts of the VName that relate to files are relevant here:
     * https://kythe.io/docs/schema/#_vname_conventions
     * TODO: consider also supplying exclusion specs as well as inclusion
     * </pre>
     *
     * <code>repeated .kythe.proto.VName included_files = 2;</code>
     */
    public com.google.devtools.kythe.proto.Storage.VName.Builder getIncludedFilesBuilder(
        int index) {
      return getIncludedFilesFieldBuilder().getBuilder(index);
    }
    /**
     * <pre>
     * if set, only return nodes whose files match any of these VNames
     * Only the parts of the VName that relate to files are relevant here:
     * https://kythe.io/docs/schema/#_vname_conventions
     * TODO: consider also supplying exclusion specs as well as inclusion
     * </pre>
     *
     * <code>repeated .kythe.proto.VName included_files = 2;</code>
     */
    public com.google.devtools.kythe.proto.Storage.VNameOrBuilder getIncludedFilesOrBuilder(
        int index) {
      if (includedFilesBuilder_ == null) {
        return includedFiles_.get(index);  } else {
        return includedFilesBuilder_.getMessageOrBuilder(index);
      }
    }
    /**
     * <pre>
     * if set, only return nodes whose files match any of these VNames
     * Only the parts of the VName that relate to files are relevant here:
     * https://kythe.io/docs/schema/#_vname_conventions
     * TODO: consider also supplying exclusion specs as well as inclusion
     * </pre>
     *
     * <code>repeated .kythe.proto.VName included_files = 2;</code>
     */
    public java.util.List<? extends com.google.devtools.kythe.proto.Storage.VNameOrBuilder> 
         getIncludedFilesOrBuilderList() {
      if (includedFilesBuilder_ != null) {
        return includedFilesBuilder_.getMessageOrBuilderList();
      } else {
        return java.util.Collections.unmodifiableList(includedFiles_);
      }
    }
    /**
     * <pre>
     * if set, only return nodes whose files match any of these VNames
     * Only the parts of the VName that relate to files are relevant here:
     * https://kythe.io/docs/schema/#_vname_conventions
     * TODO: consider also supplying exclusion specs as well as inclusion
     * </pre>
     *
     * <code>repeated .kythe.proto.VName included_files = 2;</code>
     */
    public com.google.devtools.kythe.proto.Storage.VName.Builder addIncludedFilesBuilder() {
      return getIncludedFilesFieldBuilder().addBuilder(
          com.google.devtools.kythe.proto.Storage.VName.getDefaultInstance());
    }
    /**
     * <pre>
     * if set, only return nodes whose files match any of these VNames
     * Only the parts of the VName that relate to files are relevant here:
     * https://kythe.io/docs/schema/#_vname_conventions
     * TODO: consider also supplying exclusion specs as well as inclusion
     * </pre>
     *
     * <code>repeated .kythe.proto.VName included_files = 2;</code>
     */
    public com.google.devtools.kythe.proto.Storage.VName.Builder addIncludedFilesBuilder(
        int index) {
      return getIncludedFilesFieldBuilder().addBuilder(
          index, com.google.devtools.kythe.proto.Storage.VName.getDefaultInstance());
    }
    /**
     * <pre>
     * if set, only return nodes whose files match any of these VNames
     * Only the parts of the VName that relate to files are relevant here:
     * https://kythe.io/docs/schema/#_vname_conventions
     * TODO: consider also supplying exclusion specs as well as inclusion
     * </pre>
     *
     * <code>repeated .kythe.proto.VName included_files = 2;</code>
     */
    public java.util.List<com.google.devtools.kythe.proto.Storage.VName.Builder> 
         getIncludedFilesBuilderList() {
      return getIncludedFilesFieldBuilder().getBuilderList();
    }
    private com.google.protobuf.RepeatedFieldBuilderV3<
        com.google.devtools.kythe.proto.Storage.VName, com.google.devtools.kythe.proto.Storage.VName.Builder, com.google.devtools.kythe.proto.Storage.VNameOrBuilder> 
        getIncludedFilesFieldBuilder() {
      if (includedFilesBuilder_ == null) {
        includedFilesBuilder_ = new com.google.protobuf.RepeatedFieldBuilderV3<
            com.google.devtools.kythe.proto.Storage.VName, com.google.devtools.kythe.proto.Storage.VName.Builder, com.google.devtools.kythe.proto.Storage.VNameOrBuilder>(
                includedFiles_,
                ((bitField0_ & 0x00000002) == 0x00000002),
                getParentForChildren(),
                isClean());
        includedFiles_ = null;
      }
      return includedFilesBuilder_;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:kythe.proto.NodeFilter)
  }

  // @@protoc_insertion_point(class_scope:kythe.proto.NodeFilter)
  private static final com.google.devtools.kythe.proto.NodeFilter DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.kythe.proto.NodeFilter();
  }

  public static com.google.devtools.kythe.proto.NodeFilter getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<NodeFilter>
      PARSER = new com.google.protobuf.AbstractParser<NodeFilter>() {
    public NodeFilter parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new NodeFilter(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<NodeFilter> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<NodeFilter> getParserForType() {
    return PARSER;
  }

  public com.google.devtools.kythe.proto.NodeFilter getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

