// Generated by the protocol buffer compiler.  DO NOT EDIT!
// source: kythe/proto/common.proto

package com.google.devtools.kythe.proto;

/**
 * <pre>
 * A Point represents a location within a file or buffer.
 * If line_number ≤ 0, the line number and column offset are considered
 * unknown and will be ignored.
 * A point with line_number &gt; 0 is said to be _normalized_ if it satisfies
 * the constraint 0 ≤ column_offset ≤ bytelen(line_number); that is, if the
 * column_offset is within the actual range of the corresponding line.  A
 * point can be normalized by adjusting line_number and column_offset so that
 * this constraint is satisfied.  This may be impossible if the column offset
 * exceeds the bounds of the file.
 * </pre>
 *
 * Protobuf type {@code kythe.proto.common.Point}
 */
public  final class Point extends
    com.google.protobuf.GeneratedMessageV3 implements
    // @@protoc_insertion_point(message_implements:kythe.proto.common.Point)
    PointOrBuilder {
private static final long serialVersionUID = 0L;
  // Use Point.newBuilder() to construct.
  private Point(com.google.protobuf.GeneratedMessageV3.Builder<?> builder) {
    super(builder);
  }
  private Point() {
    byteOffset_ = 0;
    lineNumber_ = 0;
    columnOffset_ = 0;
  }

  @java.lang.Override
  public final com.google.protobuf.UnknownFieldSet
  getUnknownFields() {
    return this.unknownFields;
  }
  private Point(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    this();
    if (extensionRegistry == null) {
      throw new java.lang.NullPointerException();
    }
    int mutable_bitField0_ = 0;
    com.google.protobuf.UnknownFieldSet.Builder unknownFields =
        com.google.protobuf.UnknownFieldSet.newBuilder();
    try {
      boolean done = false;
      while (!done) {
        int tag = input.readTag();
        switch (tag) {
          case 0:
            done = true;
            break;
          default: {
            if (!parseUnknownFieldProto3(
                input, unknownFields, extensionRegistry, tag)) {
              done = true;
            }
            break;
          }
          case 8: {

            byteOffset_ = input.readInt32();
            break;
          }
          case 16: {

            lineNumber_ = input.readInt32();
            break;
          }
          case 24: {

            columnOffset_ = input.readInt32();
            break;
          }
        }
      }
    } catch (com.google.protobuf.InvalidProtocolBufferException e) {
      throw e.setUnfinishedMessage(this);
    } catch (java.io.IOException e) {
      throw new com.google.protobuf.InvalidProtocolBufferException(
          e).setUnfinishedMessage(this);
    } finally {
      this.unknownFields = unknownFields.build();
      makeExtensionsImmutable();
    }
  }
  public static final com.google.protobuf.Descriptors.Descriptor
      getDescriptor() {
    return com.google.devtools.kythe.proto.Common.internal_static_kythe_proto_common_Point_descriptor;
  }

  protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
      internalGetFieldAccessorTable() {
    return com.google.devtools.kythe.proto.Common.internal_static_kythe_proto_common_Point_fieldAccessorTable
        .ensureFieldAccessorsInitialized(
            com.google.devtools.kythe.proto.Point.class, com.google.devtools.kythe.proto.Point.Builder.class);
  }

  public static final int BYTE_OFFSET_FIELD_NUMBER = 1;
  private int byteOffset_;
  /**
   * <pre>
   * The offset in bytes from the beginning of the file.
   * Requires 0 ≤ byte_offset ≤ len(file).
   * </pre>
   *
   * <code>int32 byte_offset = 1;</code>
   */
  public int getByteOffset() {
    return byteOffset_;
  }

  public static final int LINE_NUMBER_FIELD_NUMBER = 2;
  private int lineNumber_;
  /**
   * <pre>
   * The line number containing the point, 1-based.
   * </pre>
   *
   * <code>int32 line_number = 2;</code>
   */
  public int getLineNumber() {
    return lineNumber_;
  }

  public static final int COLUMN_OFFSET_FIELD_NUMBER = 3;
  private int columnOffset_;
  /**
   * <pre>
   * The byte offset of the point within its line.
   * </pre>
   *
   * <code>int32 column_offset = 3;</code>
   */
  public int getColumnOffset() {
    return columnOffset_;
  }

  private byte memoizedIsInitialized = -1;
  public final boolean isInitialized() {
    byte isInitialized = memoizedIsInitialized;
    if (isInitialized == 1) return true;
    if (isInitialized == 0) return false;

    memoizedIsInitialized = 1;
    return true;
  }

  public void writeTo(com.google.protobuf.CodedOutputStream output)
                      throws java.io.IOException {
    if (byteOffset_ != 0) {
      output.writeInt32(1, byteOffset_);
    }
    if (lineNumber_ != 0) {
      output.writeInt32(2, lineNumber_);
    }
    if (columnOffset_ != 0) {
      output.writeInt32(3, columnOffset_);
    }
    unknownFields.writeTo(output);
  }

  public int getSerializedSize() {
    int size = memoizedSize;
    if (size != -1) return size;

    size = 0;
    if (byteOffset_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(1, byteOffset_);
    }
    if (lineNumber_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(2, lineNumber_);
    }
    if (columnOffset_ != 0) {
      size += com.google.protobuf.CodedOutputStream
        .computeInt32Size(3, columnOffset_);
    }
    size += unknownFields.getSerializedSize();
    memoizedSize = size;
    return size;
  }

  @java.lang.Override
  public boolean equals(final java.lang.Object obj) {
    if (obj == this) {
     return true;
    }
    if (!(obj instanceof com.google.devtools.kythe.proto.Point)) {
      return super.equals(obj);
    }
    com.google.devtools.kythe.proto.Point other = (com.google.devtools.kythe.proto.Point) obj;

    boolean result = true;
    result = result && (getByteOffset()
        == other.getByteOffset());
    result = result && (getLineNumber()
        == other.getLineNumber());
    result = result && (getColumnOffset()
        == other.getColumnOffset());
    result = result && unknownFields.equals(other.unknownFields);
    return result;
  }

  @java.lang.Override
  public int hashCode() {
    if (memoizedHashCode != 0) {
      return memoizedHashCode;
    }
    int hash = 41;
    hash = (19 * hash) + getDescriptor().hashCode();
    hash = (37 * hash) + BYTE_OFFSET_FIELD_NUMBER;
    hash = (53 * hash) + getByteOffset();
    hash = (37 * hash) + LINE_NUMBER_FIELD_NUMBER;
    hash = (53 * hash) + getLineNumber();
    hash = (37 * hash) + COLUMN_OFFSET_FIELD_NUMBER;
    hash = (53 * hash) + getColumnOffset();
    hash = (29 * hash) + unknownFields.hashCode();
    memoizedHashCode = hash;
    return hash;
  }

  public static com.google.devtools.kythe.proto.Point parseFrom(
      java.nio.ByteBuffer data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.kythe.proto.Point parseFrom(
      java.nio.ByteBuffer data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.Point parseFrom(
      com.google.protobuf.ByteString data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.kythe.proto.Point parseFrom(
      com.google.protobuf.ByteString data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.Point parseFrom(byte[] data)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data);
  }
  public static com.google.devtools.kythe.proto.Point parseFrom(
      byte[] data,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws com.google.protobuf.InvalidProtocolBufferException {
    return PARSER.parseFrom(data, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.Point parseFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.kythe.proto.Point parseFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.Point parseDelimitedFrom(java.io.InputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input);
  }
  public static com.google.devtools.kythe.proto.Point parseDelimitedFrom(
      java.io.InputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseDelimitedWithIOException(PARSER, input, extensionRegistry);
  }
  public static com.google.devtools.kythe.proto.Point parseFrom(
      com.google.protobuf.CodedInputStream input)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input);
  }
  public static com.google.devtools.kythe.proto.Point parseFrom(
      com.google.protobuf.CodedInputStream input,
      com.google.protobuf.ExtensionRegistryLite extensionRegistry)
      throws java.io.IOException {
    return com.google.protobuf.GeneratedMessageV3
        .parseWithIOException(PARSER, input, extensionRegistry);
  }

  public Builder newBuilderForType() { return newBuilder(); }
  public static Builder newBuilder() {
    return DEFAULT_INSTANCE.toBuilder();
  }
  public static Builder newBuilder(com.google.devtools.kythe.proto.Point prototype) {
    return DEFAULT_INSTANCE.toBuilder().mergeFrom(prototype);
  }
  public Builder toBuilder() {
    return this == DEFAULT_INSTANCE
        ? new Builder() : new Builder().mergeFrom(this);
  }

  @java.lang.Override
  protected Builder newBuilderForType(
      com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
    Builder builder = new Builder(parent);
    return builder;
  }
  /**
   * <pre>
   * A Point represents a location within a file or buffer.
   * If line_number ≤ 0, the line number and column offset are considered
   * unknown and will be ignored.
   * A point with line_number &gt; 0 is said to be _normalized_ if it satisfies
   * the constraint 0 ≤ column_offset ≤ bytelen(line_number); that is, if the
   * column_offset is within the actual range of the corresponding line.  A
   * point can be normalized by adjusting line_number and column_offset so that
   * this constraint is satisfied.  This may be impossible if the column offset
   * exceeds the bounds of the file.
   * </pre>
   *
   * Protobuf type {@code kythe.proto.common.Point}
   */
  public static final class Builder extends
      com.google.protobuf.GeneratedMessageV3.Builder<Builder> implements
      // @@protoc_insertion_point(builder_implements:kythe.proto.common.Point)
      com.google.devtools.kythe.proto.PointOrBuilder {
    public static final com.google.protobuf.Descriptors.Descriptor
        getDescriptor() {
      return com.google.devtools.kythe.proto.Common.internal_static_kythe_proto_common_Point_descriptor;
    }

    protected com.google.protobuf.GeneratedMessageV3.FieldAccessorTable
        internalGetFieldAccessorTable() {
      return com.google.devtools.kythe.proto.Common.internal_static_kythe_proto_common_Point_fieldAccessorTable
          .ensureFieldAccessorsInitialized(
              com.google.devtools.kythe.proto.Point.class, com.google.devtools.kythe.proto.Point.Builder.class);
    }

    // Construct using com.google.devtools.kythe.proto.Point.newBuilder()
    private Builder() {
      maybeForceBuilderInitialization();
    }

    private Builder(
        com.google.protobuf.GeneratedMessageV3.BuilderParent parent) {
      super(parent);
      maybeForceBuilderInitialization();
    }
    private void maybeForceBuilderInitialization() {
      if (com.google.protobuf.GeneratedMessageV3
              .alwaysUseFieldBuilders) {
      }
    }
    public Builder clear() {
      super.clear();
      byteOffset_ = 0;

      lineNumber_ = 0;

      columnOffset_ = 0;

      return this;
    }

    public com.google.protobuf.Descriptors.Descriptor
        getDescriptorForType() {
      return com.google.devtools.kythe.proto.Common.internal_static_kythe_proto_common_Point_descriptor;
    }

    public com.google.devtools.kythe.proto.Point getDefaultInstanceForType() {
      return com.google.devtools.kythe.proto.Point.getDefaultInstance();
    }

    public com.google.devtools.kythe.proto.Point build() {
      com.google.devtools.kythe.proto.Point result = buildPartial();
      if (!result.isInitialized()) {
        throw newUninitializedMessageException(result);
      }
      return result;
    }

    public com.google.devtools.kythe.proto.Point buildPartial() {
      com.google.devtools.kythe.proto.Point result = new com.google.devtools.kythe.proto.Point(this);
      result.byteOffset_ = byteOffset_;
      result.lineNumber_ = lineNumber_;
      result.columnOffset_ = columnOffset_;
      onBuilt();
      return result;
    }

    public Builder clone() {
      return (Builder) super.clone();
    }
    public Builder setField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.setField(field, value);
    }
    public Builder clearField(
        com.google.protobuf.Descriptors.FieldDescriptor field) {
      return (Builder) super.clearField(field);
    }
    public Builder clearOneof(
        com.google.protobuf.Descriptors.OneofDescriptor oneof) {
      return (Builder) super.clearOneof(oneof);
    }
    public Builder setRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        int index, java.lang.Object value) {
      return (Builder) super.setRepeatedField(field, index, value);
    }
    public Builder addRepeatedField(
        com.google.protobuf.Descriptors.FieldDescriptor field,
        java.lang.Object value) {
      return (Builder) super.addRepeatedField(field, value);
    }
    public Builder mergeFrom(com.google.protobuf.Message other) {
      if (other instanceof com.google.devtools.kythe.proto.Point) {
        return mergeFrom((com.google.devtools.kythe.proto.Point)other);
      } else {
        super.mergeFrom(other);
        return this;
      }
    }

    public Builder mergeFrom(com.google.devtools.kythe.proto.Point other) {
      if (other == com.google.devtools.kythe.proto.Point.getDefaultInstance()) return this;
      if (other.getByteOffset() != 0) {
        setByteOffset(other.getByteOffset());
      }
      if (other.getLineNumber() != 0) {
        setLineNumber(other.getLineNumber());
      }
      if (other.getColumnOffset() != 0) {
        setColumnOffset(other.getColumnOffset());
      }
      this.mergeUnknownFields(other.unknownFields);
      onChanged();
      return this;
    }

    public final boolean isInitialized() {
      return true;
    }

    public Builder mergeFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws java.io.IOException {
      com.google.devtools.kythe.proto.Point parsedMessage = null;
      try {
        parsedMessage = PARSER.parsePartialFrom(input, extensionRegistry);
      } catch (com.google.protobuf.InvalidProtocolBufferException e) {
        parsedMessage = (com.google.devtools.kythe.proto.Point) e.getUnfinishedMessage();
        throw e.unwrapIOException();
      } finally {
        if (parsedMessage != null) {
          mergeFrom(parsedMessage);
        }
      }
      return this;
    }

    private int byteOffset_ ;
    /**
     * <pre>
     * The offset in bytes from the beginning of the file.
     * Requires 0 ≤ byte_offset ≤ len(file).
     * </pre>
     *
     * <code>int32 byte_offset = 1;</code>
     */
    public int getByteOffset() {
      return byteOffset_;
    }
    /**
     * <pre>
     * The offset in bytes from the beginning of the file.
     * Requires 0 ≤ byte_offset ≤ len(file).
     * </pre>
     *
     * <code>int32 byte_offset = 1;</code>
     */
    public Builder setByteOffset(int value) {
      
      byteOffset_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The offset in bytes from the beginning of the file.
     * Requires 0 ≤ byte_offset ≤ len(file).
     * </pre>
     *
     * <code>int32 byte_offset = 1;</code>
     */
    public Builder clearByteOffset() {
      
      byteOffset_ = 0;
      onChanged();
      return this;
    }

    private int lineNumber_ ;
    /**
     * <pre>
     * The line number containing the point, 1-based.
     * </pre>
     *
     * <code>int32 line_number = 2;</code>
     */
    public int getLineNumber() {
      return lineNumber_;
    }
    /**
     * <pre>
     * The line number containing the point, 1-based.
     * </pre>
     *
     * <code>int32 line_number = 2;</code>
     */
    public Builder setLineNumber(int value) {
      
      lineNumber_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The line number containing the point, 1-based.
     * </pre>
     *
     * <code>int32 line_number = 2;</code>
     */
    public Builder clearLineNumber() {
      
      lineNumber_ = 0;
      onChanged();
      return this;
    }

    private int columnOffset_ ;
    /**
     * <pre>
     * The byte offset of the point within its line.
     * </pre>
     *
     * <code>int32 column_offset = 3;</code>
     */
    public int getColumnOffset() {
      return columnOffset_;
    }
    /**
     * <pre>
     * The byte offset of the point within its line.
     * </pre>
     *
     * <code>int32 column_offset = 3;</code>
     */
    public Builder setColumnOffset(int value) {
      
      columnOffset_ = value;
      onChanged();
      return this;
    }
    /**
     * <pre>
     * The byte offset of the point within its line.
     * </pre>
     *
     * <code>int32 column_offset = 3;</code>
     */
    public Builder clearColumnOffset() {
      
      columnOffset_ = 0;
      onChanged();
      return this;
    }
    public final Builder setUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.setUnknownFieldsProto3(unknownFields);
    }

    public final Builder mergeUnknownFields(
        final com.google.protobuf.UnknownFieldSet unknownFields) {
      return super.mergeUnknownFields(unknownFields);
    }


    // @@protoc_insertion_point(builder_scope:kythe.proto.common.Point)
  }

  // @@protoc_insertion_point(class_scope:kythe.proto.common.Point)
  private static final com.google.devtools.kythe.proto.Point DEFAULT_INSTANCE;
  static {
    DEFAULT_INSTANCE = new com.google.devtools.kythe.proto.Point();
  }

  public static com.google.devtools.kythe.proto.Point getDefaultInstance() {
    return DEFAULT_INSTANCE;
  }

  private static final com.google.protobuf.Parser<Point>
      PARSER = new com.google.protobuf.AbstractParser<Point>() {
    public Point parsePartialFrom(
        com.google.protobuf.CodedInputStream input,
        com.google.protobuf.ExtensionRegistryLite extensionRegistry)
        throws com.google.protobuf.InvalidProtocolBufferException {
      return new Point(input, extensionRegistry);
    }
  };

  public static com.google.protobuf.Parser<Point> parser() {
    return PARSER;
  }

  @java.lang.Override
  public com.google.protobuf.Parser<Point> getParserForType() {
    return PARSER;
  }

  public com.google.devtools.kythe.proto.Point getDefaultInstanceForType() {
    return DEFAULT_INSTANCE;
  }

}

